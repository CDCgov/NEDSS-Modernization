name: Build-all images
on:
  push:
    branches:
      - main
      - CNMP-375-actions-build-containers
            
env:
  deployment_env: dev
  accountid: ${{secrets.cdc_nbs_sandbox_shared_services_accountid}}
  MAJOR_VERSION: 1
  MINOR_VERSION: 0
  PATCH_VERSION: 0

jobs:
  pipeline:
    name: Build and push all docker images
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # New comment
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure Environment Variables
      run: |
        github_sha_short=$(git rev-parse --short "$GITHUB_SHA")      
        github_repo_name="$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)"        
        github_branch=${GITHUB_REF#refs/heads/}
        echo "github_sha_short=$github_sha_short" >> $GITHUB_ENV
        echo "github_repo_name=$github_repo_name" >> $GITHUB_ENV
        echo "github_branch=$github_branch" >> $GITHUB_ENV
  
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: "arn:aws:iam::${{ env.accountid }}:role/cdc-github-${{ env.github_repo_name }}-${{ env.deployment_env }}-role"
        role-session-name: deploy-infrastructure
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
   
    - name: Build, tag, and push proxy image to Amazon ECR
      id: proxy
      env:
        IMAGE_NAME: proxy                
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
        IMAGE_TAG: "${{ env.github_repo_name }}-proxy-${{ env.github_branch }}-${{ env.github_sha_short }}"
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./cdc-sandbox/proxy/
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push Elasticsearch image to Amazon ECR
      id: elasticsearch
      env:
        IMAGE_NAME: elasticsearch
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
        IMAGE_TAG: "${{ env.github_repo_name }}-elasticsearch-${{ env.github_branch }}-${{ env.github_sha_short }}"
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./cdc-sandbox/elasticsearch/
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push NIFI image to Amazon ECR
      id: nifi
      env:
        IMAGE_NAME: nifi
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
        IMAGE_TAG: "${{ env.github_repo_name }}-nifi-${{ env.github_branch }}-${{ env.github_sha_short }}"
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./cdc-sandbox/nifi/
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push common-asset-server image to Amazon ECR
      id: common-asset-server
      env:
        IMAGE_NAME: common-asset-server
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
        IMAGE_TAG: "${{ env.github_repo_name }}-common-asset-server-${{ env.github_branch }}-${{ env.github_sha_short }}"
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./cdc-sandbox/common-asset-server/
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push patient-search image to Amazon ECR
      id: patient-seatch
      env:        
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
        IMAGE_TAG: "${{ env.github_repo_name }}-patient-search-${{ env.github_branch }}-${{ env.github_sha_short }}"
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./patient-search
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT