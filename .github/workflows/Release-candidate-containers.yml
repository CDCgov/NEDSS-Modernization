name: Release Candidate Container Build and Deployment Preparation
on:
  workflow_dispatch:
    inputs: 
        environment:
          type: choice
          required: true
          options:
          - TEST
        values:
          type: choice
          required: true
          options:
          - test2          
jobs:
  nbs-gateway-release-candidate:
    runs-on: ubuntu-latest
    name: NBS Gateway Release Candidate
    steps:
      - name: Build NBS Gateway Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: nbs-gateway
          build-new-container: true
          dockerfile_relative_path: -f ./apps/nbs-gateway/Dockerfile .
          environment_classifier: ${{inputs.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
      - name: Prepare NBS Gateway Release Candidate Deployment
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: nbs-gateway
          values_file_with_path: charts/nbs-gateway/values_${{input.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  modernization-api-release-candidate:
    runs-on: ubuntu-latest
    name: Modernization API Release Candidate
    steps:
      - name: Build Modernization API Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: modernization-api
          build-new-container: true
          dockerfile_relative_path: -f ./apps/modernization-api/Dockerfile .
          environment_classifier: ${{inputs.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
      - name: Prepare Modernization API Candidate Deployment
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: modernization-api
          values_file_with_path: charts/modernization-api/values_${{input.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  elasticsearch-release-candidate:
    runs-on: ubuntu-latest
    name: Elasticsearch Release Candidate
    steps:
      - name: Build Elasticsearch Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: elasticsearch
          build-new-container: true
          dockerfile_relative_path: -f ./cdc-sandbox/elasticsearch/Dockerfile .
          environment_classifier: ${{inputs.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
      - name: Prepare Elasticsearch Release Candidate Deployment
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: elasticsearch
          values_file_with_path: charts/elasticsearch-efs/values_${{input.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  nifi-release-candidate:
    runs-on: ubuntu-latest
    name: NiFi Release Candidate
    steps:
      - name: Build NiFi Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: nifi
          build-new-container: true
          dockerfile_relative_path: -f ./cdc-sandbox/nifi/Dockerfile .
          environment_classifier: ${{inputs.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
      - name: Prepare NiFi Release Candidate Deployment
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: nifi
          values_file_with_path: charts/nifi/values_${{input.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}       
