name: Release Candidate Container Build and Deployment Preparation
on:
  workflow_dispatch:

env:
  environment: TEST
  values: test2

jobs:
  nbs-gateway-release-candidate:
    name: NBS Gateway Release Candidate
    env:
      name: nbs-gateway
      chart: nbs-gateway
    steps:    
      - name: Build NBS Gateway Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: ${{env.name}}   
          build-new-container: true
          dockerfile_relative_path: -f ./apps/${{env.name}}/Dockerfile .
          environment_classifier: ${{env.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}    
      - name: Prepare NBS Gateway Release Candidate Deployment      
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: ${{env.name}}
          values_file_with_path: charts/${{env.chart}}/values_${{env.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  modernization-api-release-candidate:
    name: Modernization API Release Candidate
    env:
      name: modernization-api
      chart: modernization-api
    steps:
      - name: Build Modernization API Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: ${{env.name}} 
          build-new-container: true
          dockerfile_relative_path: -f ./apps/${{env.name}}/Dockerfile .
          environment_classifier: ${{env.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
    - name: Prepare Modernization API Candidate Deployment      
      uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
      with:
        microservice_name: ${{env.name}}
        values_file_with_path: charts/${{env.chart}}/values_${{env.values}}.yaml
        new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
      secrets:
        GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
        GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
        HELM_TOKEN: ${{secrets.HELM_TOKEN}}      
  elasticsearch-release-candidate:
    name: Elasticsearch Release Candidate
    env:
      name: elasticsearch
      chart: elasticsearch-efs
    steps:
      - name: Build Elasticsearch Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: ${{env.name}}    
          build-new-container: true
          dockerfile_relative_path: -f ./cdc-sandbox/${{env.name}}/Dockerfile .
          environment_classifier: ${{env.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
      - name: Prepare Elasticsearch Release Candidate Deployment        
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: ${{env.name}}
          values_file_with_path: charts/${{env.chart}}/values_${{env.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}        
  nifi-release-candidate:
    name: NiFi Release Candidate
    env:
      name: nifi
      chart: nifi-efs    
    steps:
      - name: Build NiFi Release Candidate
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
        with:
          microservice_name: ${{env.name}}
          build-new-container: true
          dockerfile_relative_path: -f ./cdc-sandbox/${{env.name}}/Dockerfile .
          environment_classifier: ${{env.environment}}
        secrets:
          CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
          ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}
      - name: Prepare NiFi Release Candidate Deployment        
        uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
        with:
          microservice_name: ${{env.name}}
          values_file_with_path: charts/${{env.chart}}}/values_${{env.values}}.yaml
          new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
        secrets:
          GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
          GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
          HELM_TOKEN: ${{secrets.HELM_TOKEN}}       