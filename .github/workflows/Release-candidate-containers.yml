name: Release Candidate Container Build and Deployment Preparation
on:
  workflow_dispatch:
    inputs: 
        classifier:
          description: Metadata to append to application version (A setting of NONE, indicates all metadata to be stripped). Ex. if version=1.0.0, and classifier=SNAPSHOT result will be 1.0.0-SNAPSHOT.<githubsha>. If version=1.0.0, and classifier=NONE result will be 1.0.0.
          required: true
          type: string
          default: release-7.<minor>.<patch>
        environment:
          type: choice
          required: true
          options:
          - test2


jobs:
  build-nbs-gateway-release-candidate:
    name: Build NBS Gateway Release Candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
    with:
      microservice_name: nbs-gateway    
      build-new-container: true
      dockerfile_relative_path: -f ./apps/nbs-gateway/Dockerfile .
      environment_classifier: ${{inputs.classifier}}
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  prepare-nbs-gateway-release-candidate:
    name: Prepare NBS Gateway Release Candidate Deployment
    needs: build-nbs-gateway-release-candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: nbs-gateway
      values_file_with_path: charts/nbs-gateway/values_${{inputs.environment}}.yaml
      new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  build-modernization-api-release-candidate:
    name: Build Modernization API Release Candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
    with:
      microservice_name: modernization-api    
      build-new-container: true
      dockerfile_relative_path: -f ./apps/modernization-api/Dockerfile .
      environment_classifier: ${{inputs.classifier}}
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  prepare-modernization-api-release-candidate:
    name: Prepare Modernization API Candidate Deployment
    needs: build-modernization-api-release-candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: modernization-api
      values_file_with_path: charts/modernization-api/values_${{inputs.environment}}.yaml
      new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}      
  build-elasticsearch-release-candidate:
    name: Build Elasticsearch Release Candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
    with:
      microservice_name: elasticsearch    
      build-new-container: true
      dockerfile_relative_path: -f ./cdc-sandbox/elasticsearch/Dockerfile .
      environment_classifier: ${{inputs.classifier}}
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  prepare-elasticsearch-release-candidate:
    name: Prepare Elasticsearch Release Candidate Deployment
    needs: build-elasticsearch-release-candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: elasticsearch
      values_file_with_path: charts/elasticsearch-efs/values_${{inputs.environment}}.yaml
      new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}        
  build-nifi-release-candidate:
    name: Build NiFi Release Candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Release-gradle-microservice-container.yaml@main
    with:
      microservice_name: nifi    
      build-new-container: true
      dockerfile_relative_path: -f ./cdc-sandbox/nifi/Dockerfile .
      environment_classifier: ${{inputs.classifier}}
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  prepare-nifi-release-candidate:
    name: Prepare NiFi Release Candidate Deployment
    needs: build-nifi-release-candidate
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: nifi
      values_file_with_path: charts/nifi-efs/values_${{inputs.environment}}.yaml
      new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}       