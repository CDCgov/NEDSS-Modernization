[versions]
springBoot = "2.7.8"
assertj = "3.24.2"
jackson = "2.14.2"
queryDSL = "5.0.0"
blaze-persistence = "1.6.8"
testcontainers = "1.17.6"
cucumber = "7.8.0"

[libraries]
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockito-inline = { module = "org.mockito:mockito-inline", version = "4.11.0" }
springBoot = { module = "org.springframework.boot:spring-boot-starter", version.ref = "springBoot" }
springBoot-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
springBoot-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
springBoot-graphql = { module = "org.springframework.boot:spring-boot-starter-graphql", version.ref = "springBoot" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka" }
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test" }
spring-elasticsearch = { module = "org.springframework.data:spring-data-elasticsearch", version = "4.4.6" }
spring-json = { module = "org.springframework.boot:spring-boot-starter-json", version.ref = "springBoot" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springBoot" }
spring-security-test = {module = 'org.springframework.security:spring-security-test'}
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
queryDSL-apt = { module = "com.querydsl:querydsl-apt", version.ref = "queryDSL" }
queryDSL-jpa = { module = "com.querydsl:querydsl-jpa", version.ref = "queryDSL" }
lombok = { module = "org.projectlombok:lombok" }
mssql-jdbc = { module = "com.microsoft.sqlserver:mssql-jdbc", version = "10.2.1.jre17" }
blaze-persistence-core = { module = "com.blazebit:blaze-persistence-core-impl", version.ref = "blaze-persistence" }
blaze-persistence-queryDSL = { module = "com.blazebit:blaze-persistence-integration-querydsl-expressions", version.ref = "blaze-persistence" }
blaze-persistence-hibernate = { module = "com.blazebit:blaze-persistence-integration-hibernate-5.6", version.ref = "blaze-persistence" }
java-jwt = { module = "com.auth0:java-jwt", version = "4.2.0" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-elasticsearch = { module = "org.testcontainers:elasticsearch", version.ref = "testcontainers" }
javafaker = { module = "com.github.javafaker:javafaker", version = "1.0.2" }
snakeyaml = { module = "org.yaml:snakeyaml", version = "1.33" }
cucumber-java = { module = "io.cucumber:cucumber-java", version.ref = "cucumber" }
cucumber-spring = { module = "io.cucumber:cucumber-spring", version.ref = "cucumber" }
cucumber-junit = { module = "io.cucumber:cucumber-junit", version.ref = "cucumber" }
cucumber-junit-platform-engine = { module = "io.cucumber:cucumber-junit-platform-engine", version.ref = "cucumber" }
junit = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform = { module = "org.junit.platform:junit-platform-suite" }
awaitility = {module = "org.awaitility:awaitility"}

[bundles]
security = ["java-jwt", "spring-security"]
jackson = ["jackson-core", "jackson-datatype-jsr310"]
jpa = ["springBoot", "springBoot-jpa"]
elasticsearch = ["spring-elasticsearch"]
kafka = ["spring-kafka"]
testing = ["assertj-core", "mockito-inline"]
queryDSL = ["queryDSL-apt", "queryDSL-jpa"]
blaze-persistence-queryDSL = [
    "blaze-persistence-core",
    "blaze-persistence-queryDSL",
    "blaze-persistence-hibernate",
]
testcontainers = ["testcontainers", "testcontainers-junit"]
testcontainers-elasticsearch = [
    "testcontainers",
    "testcontainers-junit",
    "testcontainers-elasticsearch",
]
javafaker = ["javafaker", "snakeyaml"]
cucumber = [
    "cucumber-java",
    "cucumber-spring",
    "cucumber-junit",
    "cucumber-junit-platform-engine",
    "junit",
    "junit-platform",
]

[plugins]
springDependencies = { id = "io.spring.dependency-management", version = "1.0.12.RELEASE" }
springBoot = { id = 'org.springframework.boot', version.ref = "springBoot" }
