[versions]
springBoot = '2.7.18'
spring-security = '5.8.11'
jackson = '2.13.5'
queryDSL = '5.0.0'
graphql = '20.7'
spring-kafka = '2.9.13'
junit-jupiter = '5.8.2'
cucumber = '7.14.0'
assertj = '3.24.2'
testcontainers = '1.17.6'

[libraries]
guava = { module = 'com.google.guava:guava', version = '32.1.3-jre' }
snake-yaml = { module = 'org.yaml:snakeyaml', version = '2.2' }
springBoot = { module = 'org.springframework.boot:spring-boot-starter', version.ref = 'springBoot' }
springBoot-jdbc = { module = 'org.springframework.boot:spring-boot-starter-jdbc', version.ref = 'springBoot' }
springBoot-jpa = { module = 'org.springframework.boot:spring-boot-starter-data-jpa', version.ref = 'springBoot' }
springBoot-web = { module = 'org.springframework.boot:spring-boot-starter-web', version.ref = 'springBoot' }
graphql = { module = 'com.graphql-java:graphql-java', version.ref = 'graphql' }
springBoot-graphql = { module = 'org.springframework.boot:spring-boot-starter-graphql', version.ref = 'springBoot' }
spring-kafka = { module = 'org.springframework.kafka:spring-kafka', version.ref = 'spring-kafka' }
snappy = { module = 'org.xerial.snappy:snappy-java', version = '1.1.10.5' }
spring-kafka-test = { module = 'org.springframework.kafka:spring-kafka-test', version.ref = 'spring-kafka' }
elasticsearch-java = { module = 'co.elastic.clients:elasticsearch-java', version = '7.17.16' }
parsson = { module = 'org.eclipse.parsson:parsson', version = '1.1.5' }
spring-test = { module = 'org.springframework.boot:spring-boot-starter-test', version.ref = 'springBoot' }
spring-security = { module = 'org.springframework.boot:spring-boot-starter-security', version.ref = 'springBoot' }
spring-security-config = { module = 'org.springframework.security:spring-security-config', version.ref = 'spring-security' }
spring-security-web = { module = 'org.springframework.security:spring-security-web', version.ref = 'spring-security' }
spring-security-oauth2-resource-server = { module = 'org.springframework.security:spring-security-oauth2-resource-server', version.ref = 'spring-security' }
spring-security-oauth2-jose = { module = 'org.springframework.security:spring-security-oauth2-jose', version.ref = 'spring-security' }
spring-security-test = { module = 'org.springframework.security:spring-security-test', version.ref = 'spring-security' }
springfox = { module = 'io.springfox:springfox-boot-starter', version = '3.0.0' }
jackson-core = { module = 'com.fasterxml.jackson.core:jackson-core', version.ref = 'jackson' }
jackson-datatype-jsr310 = { module = 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310', version.ref = 'jackson' }
queryDSL-apt = { module = 'com.querydsl:querydsl-apt', version.ref = 'queryDSL' }
queryDSL-jpa = { module = 'com.querydsl:querydsl-jpa', version.ref = 'queryDSL' }
lombok = { module = 'org.projectlombok:lombok', version = '1.18.30' }
mssql-jdbc = { module = 'com.microsoft.sqlserver:mssql-jdbc', version = '10.2.1.jre17' }
java-jwt = { module = 'com.auth0:java-jwt', version = '4.4.0' }
itextpdf = { module = 'com.itextpdf:itextpdf', version = '5.5.13.3' }
assertj-core = { module = 'org.assertj:assertj-core', version.ref = 'assertj' }
mockito-inline = { module = 'org.mockito:mockito-inline', version = '4.11.0' }
testcontainers = { module = 'org.testcontainers:testcontainers', version.ref = 'testcontainers' }
testcontainers-junit = { module = 'org.testcontainers:junit-jupiter', version.ref = 'testcontainers' }
testcontainers-elasticsearch = { module = 'org.testcontainers:elasticsearch', version.ref = 'testcontainers' }
cucumber-java = { module = 'io.cucumber:cucumber-java', version.ref = 'cucumber' }
cucumber-spring = { module = 'io.cucumber:cucumber-spring', version.ref = 'cucumber' }
cucumber-junit = { module = 'io.cucumber:cucumber-junit', version.ref = 'cucumber' }
cucumber-junit-platform-engine = { module = 'io.cucumber:cucumber-junit-platform-engine', version.ref = 'cucumber' }
junit = { module = 'org.junit.jupiter:junit-jupiter', version.ref = 'junit-jupiter' }
junit-platform = { module = 'org.junit.platform:junit-platform-suite', version = '1.10.0' }
awaitility = { module = 'org.awaitility:awaitility', version = '4.2.0' }

[bundles]
security = ['java-jwt', 'spring-security', 'spring-security-config', 'spring-security-web']
oidc = ['spring-security-oauth2-resource-server', 'spring-security-oauth2-jose']
graphql = ['graphql', 'springBoot-graphql']
jackson = ['jackson-core', 'jackson-datatype-jsr310']
jpa = ['springBoot', 'springBoot-jpa']
jdbc = ['springBoot', 'springBoot-jdbc']
elasticsearch = ['parsson', 'elasticsearch-java']
kafka = ['spring-kafka', 'snappy']
testing = ['assertj-core', 'mockito-inline']
queryDSL = ['queryDSL-apt', 'queryDSL-jpa']
swagger = ['springfox']
testcontainers = ['testcontainers', 'testcontainers-junit']
testcontainers-elasticsearch = [
    'testcontainers',
    'testcontainers-junit',
    'testcontainers-elasticsearch',
]
cucumber = [
    'cucumber-java',
    'cucumber-spring',
    'cucumber-junit',
    'cucumber-junit-platform-engine',
    'junit',
    'junit-platform',
]

[plugins]
springBoot = { id = 'org.springframework.boot', version.ref = 'springBoot' }
