spring:
     datasource:
        url: jdbc:sqlserver://localhost:1433;database=nbs_odse;encrypt=true;trustServerCertificate=true;
        username: sa
        password: fake.fake.fake.1234
nbs:
    elasticsearch:
        url: http://localhost:9200
kafka:
    enabled: false
    bootstrap-servers: localhost:9092,localhost:9095,localhost:29092,localhost:29095
    listener:
        ack-mode: record
    producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      group-id: patient-search
      properties:
        # Delegate deserializers
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        specific:
          avro:
            reader: true
    properties:
        schema:
            registry:
                url: http://localhost:9091
        topic:
            suffix: '-event'
            partition.count: 3
            replication.factor: 3
        message.max.attempt: 5
        retry.naming.pattern: -neds-part-retry
        dlt.naming.pattern: -neds-part-dlt
kafkadef:
    patient-search:
        topics:
            request:
                patient: request-patient-search.patientsearch
                patientupdate: request-patient-search.patientupdate
                patientdelete: request-patient-search.patientdelete
            event:
                patient: event-patient-search.patientsearch
                patientupdate: response-patient-search.patientupdate
                patientdelete: request-patient-search.patientdelete
