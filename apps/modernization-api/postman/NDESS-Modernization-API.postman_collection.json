{
	"info": {
		"_postman_id": "9485c6b8-889e-4768-93b2-a4a6f92d1ff3",
		"name": "NDESS-Modernization-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28141522"
	},
	"item": [
		{
			"name": "coded-values",
			"item": [
				{
					"name": "State Counties",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query stateCounties($state: String) {\n  counties(state: $state) {\n    name\n    value\n  }\n}\n",
								"variables": "{\n    \"state\": \"01\",\n    \"page\": {\n        \"pageNumber\": 0,\n        \"pageSize\": \"5\"\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "States",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query states {\n  states {\n    name\n    value\n    abbreviation\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Marital Statuses",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query states {\n  states {\n    name\n    value\n    abbreviation\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Primary Occupations",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query primaryOccupations {\n  primaryOccupations {\n    name\n    value\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Event Search [Investigation]",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query findInvestigationsByFilter($filter:InvestigationFilter!,$page:SortablePage){\n    findInvestigationsByFilter(filter:$filter,page:$page){\n        content{\n            id\n            localId\n            personParticipations {\n                typeCd\n                personParentUid\n            }\n        }\n        total\n    }\n}",
								"variables": " {\n\t\t\"page\": {\n\t\t\t\"pageNumber\": 0,\n\t\t\t\"pageSize\": 25\n\t\t},\n\t\t\"filter\": {\n\t\t\t\"notificationStatuses\": [\n\t\t\t\t\"UNASSIGNED\"\n\t\t\t]\n\t\t}\n\t}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Laboratory Report Search",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query search($filter: LabReportFilter!, $page: SortablePage) {\n        findLabReportsByFilter(filter: $filter, page: $page) {\n          total\n          content{\n              relevance\n              id\n              localId\n              personParticipations {\n                firstName\n                lastName\n              }\n              observations{\n                cdDescTxt\n                displayName\n              }\n              labTestSummaries {\n                name\n                status\n                numeric\n                high\n                low\n                unit\n              }\n       \n          }\n        }\n      }",
								"variables": "{\n    \"page\": {\n        \"pageNumber\": 0,\n        \"pageSize\": 25,\n        \"sortDirection\": \"ASC\",\n        \"sortField\": \"lastNm\"\n    },\n    \"filter\": {\n        \n    }\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patient Search",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "      query patients($filter: PersonFilter!, $page: SortablePage) {\n        findPatientsByFilter(filter: $filter, page: $page) {\n          content {\n            patient\n            shortId\n            status\n            birthday\n            age\n            gender\n            legalName {\n              first\n              middle\n              last\n              suffix\n            }\n            names {\n              type\n              first\n              middle\n              last\n              suffix\n            }\n            identification {\n              type\n              value\n            }\n            emails\n            phones\n            addresses {\n                type\n                use\n                address\n                address2\n                city\n                county\n                state\n                zipcode\n            }\n            detailedPhones {\n                type\n                use\n                number\n            }\n          }\n          total\n        }\n      }",
								"variables": "{\n    \"filter\" :{\n        \"recordStatus\": [\"ACTIVE\"],\n        \"id\":\"114097\"\n        }        \n    },\n    \"page\": {\n        \"pageNumber\": 0,\n        \"pageSize\": 25\n\t}\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql?",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "patient profile",
			"item": [
				{
					"name": "Create",
					"item": [
						{
							"name": "Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const patient = pm.response.json().data?.createPatient?.id;",
											"pm.collectionVariables.set(\"patient\", patient);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation create($patient: PersonInput!) {\n  createPatient(patient: $patient) {\n    id\n    shortId\n  }\n}\n",
										"variables": "{\n    \"patient\": {\n        \"comments\": \"Created for Development testing\",\n        \"asOf\": \"{{now}}\",\n        \"names\": [\n            {\n                \"use\": \"L\",\n                \"first\": \"{{$randomFirstName}}\",\n                \"last\": \"{{$randomLastName}}\"\n            }\n        ]\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const patient = pm.response.json().data?.createPatient?.id;",
											"pm.collectionVariables.set(\"patient\", patient);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation create($patient: PersonInput!) {\n  createPatient(patient: $patient) {\n    id\n    shortId\n  }\n}\n",
										"variables": "{\n    \"patient\": {\n        \"comments\": \"Created for Development testing\",\n        \"asOf\": \"{{now}}\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Coded Values",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query addPatientValues {\n  raceCategories {\n    value\n    name\n  }\n  ethnicGroups {\n    value\n    name\n  }\n  identificationTypes {\n    value\n    name\n  }\n  assigningAuthorities {\n    value\n    name\n  }\n  suffixes {\n    value\n    name\n  }\n  maritalStatuses {\n    value\n    name\n  }\n  genders {\n    value\n    name\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "events",
					"item": [
						{
							"name": "findTreatmentsForPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query treatments($patient: ID!, $page: Page) {\n  findTreatmentsForPatient(patient: $patient, page: $page) {\n    content {\n      treatment\n      createdOn\n      provider\n      treatedOn\n      description\n      event\n      associatedWith {\n        id\n        local\n        condition\n      }\n    }\n    total\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findMorbidityReportForPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query reports($patient: ID!, $page: Page) {\n  findMorbidityReportsForPatient(patient: $patient, page: $page) {\n    content {\n      morbidity\n      receivedOn\n      provider\n      reportedOn\n      condition\n      jurisdiction\n      event\n      associatedWith {\n        id\n        local\n        condition\n      }\n      treatments\n      labResults {\n        labTest\n        status\n        codedResult\n        numericResult\n        textResult\n      }\n    }\n    total\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findLabReportsForPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query lab_reports($patient: Int!, $page: Page) {\n  findLabReportsForPatient(personUid: $patient, page: $page) {\n\n    id\n    observationUid\n    addTime\n    effectiveFromTime\n    programAreaCd\n    jurisdictionCodeDescTxt\n    localId\n    electronicInd\n    associatedInvestigations {\n      publicHealthCaseUid\n      cdDescTxt\n      localId\n    }\n    personParticipations {\n      typeCd\n      personCd\n      firstName\n      lastName\n    }\n    organizationParticipations {\n      typeCd\n      name\n    }\n    observations {\n      domainCd\n      cdDescTxt\n      displayName\n    }\n  \n  }\n}\n",
										"variables": "{\n\n    \"patient\": {{patient}},\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findContactsNamedByPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query namedByPatient($patient: ID!, $page: Page) {\n  findContactsNamedByPatient(patient: $patient, page: $page) {\n    content {\n      contactRecord\n      createdOn\n      condition {\n          id\n          description\n      }\n      contact {\n        id\n        name\n      }\n      namedOn\n      associatedWith {\n        id\n        local\n        condition\n      }\n      event\n    }\n    total\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findPatientNamedByContact",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query namedByContact($patient: ID!, $page: Page) {\n  findPatientNamedByContact(patient: $patient, page: $page) {\n    content {\n      contactRecord\n      createdOn\n      contact {\n        id\n        name\n      }\n      namedOn\n      condition {\n        id\n        description\n      }\n      priority\n      disposition\n      event\n      associatedWith {\n        id\n        local\n        condition\n      }\n    }\n    total\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findDocumentsForPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query documents($patient: ID!, $page: Page) {\n  findDocumentsForPatient(patient: $patient, page: $page) {\n    content {\n      document\n      receivedOn\n      type\n      sendingFacility\n      reportedOn\n      condition\n      event\n      associatedWith {\n        id\n        local\n      }\n    }\n    total\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findInvestigationsForPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query investigations($patient: ID!, $page: Page, $openOnly: Boolean) {\n  findInvestigationsForPatient(\n    patient: $patient\n    openOnly: $openOnly\n    page: $page\n  ) {\n    total\n    number\n    content {\n      investigation\n      startedOn\n      condition\n      status\n      caseStatus\n      jurisdiction\n      event\n      coInfection\n      notification\n      investigator\n    }\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": 0,\n        \"pageSize\": 25\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "findVaccinationsForPatient",
							"protocolProfileBehavior": {
								"followRedirects": false,
								"followOriginalHttpMethod": false,
								"followAuthorizationHeader": false
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query vaccinations($patient: ID!, $page: Page) {\n  findVaccinationsForPatient(patient: $patient, page: $page) {\n    content {\n      vaccination\n      createdOn\n      provider\n      administeredOn\n      administered\n      event\n      associatedWith {\n        id\n        local\n        condition\n      }\n    }\n    total\n  }\n}\n",
										"variables": "{\n    \"patient\": \"{{patient}}\",\n    \"page\": {\n        \"pageNumber\": \"0\",\n        \"pageSize\": \"25\"\n    }\n}"
									}
								},
								"url": {
									"raw": "{{base}}/graphql",
									"host": [
										"{{base}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "demographics",
					"item": [
						{
							"name": "Administrative",
							"item": [
								{
									"name": "Administrative",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!, $page: Page) {\n  findPatientProfile(patient: $patient) {\n    id\n    administrative(page: $page) {\n      total\n      number\n      size\n      content {\n        patient\n        id\n        version\n        asOf\n        comment\n      }\n    }\n  }\n}\n",
												"variables": "{\n    \"patient\": \"10063398\",\n    \"page\": {\n        \"pageNumber\": 0,\n        \"pageSize\": 25\n    }\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Administrative",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation administrative($input: AdministrativeInput!) {\n  updatePatientAdministrative(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n\t\t\"input\": {\n\t\t\t\"patient\": \"10095454\",\n\t\t\t\"asOf\": \"{{now}}\",\n\t\t\t\"comment\": \"{{$randomLoremSentence}}\"\n\t\t}\n\t}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Name",
							"item": [
								{
									"name": "Name Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query names {\n  nameTypes {\n    value\n    name\n  }\n  prefixes {\n    value\n    name\n  }\n  suffixes {\n    value\n    name\n  }\n  degrees {\n    value\n    name\n  }\n}\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Names",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!, $page: Page) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    version\n    names(page: $page) {\n      total\n      number\n      size\n      content {\n        patient\n        asOf\n        sequence\n        use {\n          id\n          description\n        }\n        prefix {\n          id\n          description\n        }\n        first\n        middle\n        secondMiddle\n        last\n        secondLast\n        suffix {\n          id\n          description\n        }\n        degree {\n          id\n          description\n        }\n      }\n    }\n  }\n}\n",
												"variables": "{\n  \"patient\": \"{{patient}}\",\n  \"page\": {\n    \"pageNumber\": 0,\n    \"pageSize\": 5\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Name",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation add($input: NewPatientNameInput!) {\n  addPatientName(input: $input) {\n    patient\n    sequence\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"asOf\": \"{{now}}\",\n    \"type\": \"L\",\n    \"prefix\": \"MR\",\n    \"first\": \"{{$randomFirstName}}\",\n    \"middle\": \"{{$randomFirstName}}\",\n    \"secondMiddle\": \"{{$randomFirstName}}\",\n    \"last\": \"{{$randomLastName}}\",\n    \"secondLast\": \"{{$randomLastName}}\",\n    \"suffix\": \"ESQ\",\n    \"degree\": \"PHD\"\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Name",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation update($input: UpdatePatientNameInput!) {\n  updatePatientName(input: $input) {\n    patient\n    sequence\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"sequence\": 1,\n    \"asOf\": \"{{now}}\",\n    \"type\": \"L\",\n    \"first\": \"{{$randomFirstName}}\",\n    \"middle\": \"{{$randomFirstName}}\",\n    \"secondMiddle\": \"{{$randomFirstName}}\",\n    \"last\": \"{{$randomLastName}}\",\n    \"secondLast\": \"{{$randomLastName}}\"\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Name",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation update($input: DeletePatientNameInput!) {\n  deletePatientName(input: $input) {\n    patient\n    sequence\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"sequence\": \"1\"\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Address",
							"item": [
								{
									"name": "Address Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query addresses($state: String) {\n  addressTypes {\n    value\n    name\n  }\n  addressUses {\n    value\n    name\n  }\n  countries {\n    value\n    name\n  }\n  states {\n    value\n    name\n  }\n  counties(state: $state) {\n    value\n    name\n    group\n  }\n}\n",
												"variables": "{\n\t\"state\": \"ROOT\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Address",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!, $page: Page) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    addresses(page: $page) {\n      number\n      total\n      size\n      content {\n        patient\n        id\n        version\n        asOf\n        type {\n          id\n          description\n        }\n        use {\n          id\n          description\n        }\n        address1\n        address2\n        city\n        county {\n          id\n          description\n        }\n        state {\n          id\n          description\n        }\n        zipcode\n        country {\n          id\n          description\n        }\n        censusTract\n        comment\n      }\n    }\n  }\n}\n",
												"variables": "{\n  \"patient\": \"{{patient}}\",\n  \"page\": {\n    \"pageNumber\": 0,\n    \"pageSize\": 5\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const address = pm.response.json().data?.addPatientAddress?.id;",
													"pm.collectionVariables.set(\"address\", address);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation address($input: NewPatientAddressInput!) {\n  addPatientAddress(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": {{patient}},\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"H\",\n\t\t\"use\": \"H\",\n\t\t\"address1\": \"{{$randomStreetAddress}}\",\t\t\n\t\t\"city\": \"{{$randomCity}}\",\n\t\t\"state\": \"11\",\n\t\t\"zipcode\": \"100001\",\n\t\t\"county\": \"11001\",\n\t\t\"censusTract\": \"0000\",\n\t\t\"country\": \"840\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Address",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation address($input: UpdatePatientAddressInput!) {\n  updatePatientAddress(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": {{patient}},\n\t\t\"id\": {{address}},\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"H\",\n\t\t\"use\": \"H\",\n\t\t\"address1\": \"{{$randomStreetAddress}}\",\t\t\n\t\t\"city\": \"{{$randomCity}}\",\n\t\t\"state\": \"11\",\n\t\t\"zipcode\": \"100001\",\n\t\t\"county\": \"11001\",\n\t\t\"censusTract\": \"0000\",\n\t\t\"country\": \"840\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Address",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation address($input: DeletePatientAddressInput!) {\n  deletePatientAddress(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n\t\t\"id\": {{address}}\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Phone",
							"item": [
								{
									"name": "Phone Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query phones {\n  phoneTypes {\n    value\n    name\n  }\n  phoneUses {\n    value\n    name\n  }\n}\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Phones",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!, $page: Page) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    version\n    phones(page: $page) {\n      number\n      total\n      size\n      content {\n        patient\n        id\n        version\n        asOf\n        type {\n          id\n          description\n        }\n        use {\n          id\n          description\n        }\n        countryCode\n        number\n        extension\n        email\n        url\n        comment\n      }\n    }\n  }\n}\n",
												"variables": "{\n  \"patient\": \"{{patient}}\",\n  \"page\": {\n    \"pageNumber\": 0,\n    \"pageSize\": 5\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const phone = pm.response.json().data?.addPatientPhone?.id;",
													"pm.collectionVariables.set(\"phone\", phone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation phone($input: NewPatientPhoneInput!) {\n  addPatientPhone(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"PH\",\n\t\t\"use\": \"H\",\n\t\t\"countryCode\": \"{{randomCountryCode}}\",\n\t\t\"number\": \"{{$randomPhoneNumber}}\",\n\t\t\"extension\": \"{{randomExtension}}\",\n\t\t\"comment\": \"Added for Developer testing\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const phone = pm.response.json().data?.addPatientPhone?.id;",
													"pm.collectionVariables.set(\"phone\", phone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation email($input: NewPatientPhoneInput!) {\n  addPatientPhone(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"NET\",\n\t\t\"use\": \"H\",\n\t\t\"email\": \"{{$randomEmail}}\",\n\t\t\"url\": \"{{$randomUrl}}\",\n\t\t\"comment\": \"Added for Developer testing\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Phone",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation phone($input: UpdatePatientPhoneInput!) {\n  updatePatientPhone(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n        \"id\":{{phone}},\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"PH\",\n\t\t\"use\": \"H\",\n\t\t\"countryCode\": \"{{randomCountryCode}}\",\n\t\t\"number\": \"{{$randomPhoneNumber}}\",\n\t\t\"extension\": \"{{randomExtension}}\",\n\t\t\"comment\": \"Updated for Developer testing\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Email",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation email($input: UpdatePatientPhoneInput!) {\n  updatePatientPhone(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n        \"id\":{{phone}},\n\t\t\"asOf\": \"{{now}}\",\n        \"type\": \"NET\",\n\t\t\"use\": \"H\",\n\t\t\"email\": \"{{$randomEmail}}\",\n\t\t\"url\": \"{{$randomUrl}}\",\n\t\t\"comment\": \"Updated for Developer testing\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Phone / Email",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation phone($input: DeletePatientPhoneInput!) {\n  deletePatientPhone(input: $input) {\n    patient\n    id\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n\t\t\"id\": \"{{phone}}\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Identification",
							"item": [
								{
									"name": "Identification Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query identification {\n  identificationTypes {\n    value\n    name\n  }\n  assigningAuthorities {\n    value\n    name\n  }\n}\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Identification",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query identification($patient: ID!, $page: Page) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    version\n    shortId\n    identification(page: $page) {\n      total\n      number\n      size\n      content {\n        patient\n        sequence\n        asOf\n        type {\n          id\n          description\n        }\n        authority {\n          id\n          description\n        }\n        value\n      }\n    }\n  }\n}\n",
												"variables": "{\n  \"patient\": \"{{patient}}\",\n  \"page\": {\n    \"pageNumber\": 0,\n    \"pageSize\": 5\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Identification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const identification = pm.response.json().data?.addPatientIdentification?.sequence;",
													"pm.collectionVariables.set(\"identification\", identification);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation identification($input: NewPatientIdentificationInput!) {\n  addPatientIdentification(input: $input) {\n    patient\n    sequence\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"SS\",\n\t\t\"authority\": \"SSA\",\n\t\t\"value\": \"{{randomIdentificationNumber}}\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Identification",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation identification($input: UpdatePatientIdentificationInput!) {\n  updatePatientIdentification(input: $input) {\n    patient\n    sequence\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n        \"sequence\": {{identification}},\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"type\": \"OTH\",\n\t\t\"value\": \"{{randomIdentificationNumber}}\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Identification",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation identification($input: DeletePatientIdentificationInput!) {\n  deletePatientIdentification(input: $input) {\n    patient\n    sequence\n  }\n}\n",
												"variables": "{\n    \"input\": {\n        \"patient\": \"{{patient}}\",\n        \"sequence\": \"{{identification}}\"    \n    }\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Race",
							"item": [
								{
									"name": "Race Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query races($category: String) {\n  raceCategories {\n    value\n    name\n  }\n  detailedRaces(category: $category) {\n    value\n    name\n    group\n  }\n}\n",
												"variables": "{\n    \"category\" : \"ROOT\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Race",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!, $page: Page) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    version\n    races(page: $page) {\n      total\n      number\n      size\n      content {\n        patient\n        id\n        version\n        asOf\n        category {\n          id\n          description\n        }\n        detailed {\n          id\n          description\n        }\n      }\n    }\n  }\n}\n",
												"variables": "{\n  \"patient\": \"{{patient}}\",\n  \"page\": {\n    \"pageNumber\": 0,\n    \"pageSize\": 5\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Race",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation add($input: RaceInput!) {\n  addPatientRace(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": \"{{patient}}\",\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"category\": \"2028-9\",\n\t\t\"detailed\": [\n\t\t\t\"2039-6\"\n\t\t]\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Race",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation update($input: RaceInput!) {\n  updatePatientRace(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"asOf\": \"{{now}}\",\n    \"category\": \"2028-9\",\n    \"detailed\": [\"2048-7\", \"2039-6\"]\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Race",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation delete($input: DeletePatientRace!) {\n  deletePatientRace(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"category\": \"2028-9\"\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "General Information",
							"item": [
								{
									"name": "General Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query generalInformationValues {\n  maritalStatuses {\n    value\n    name\n  }\n  primaryOccupations {\n    value\n    name\n  }\n  educationLevels {\n    value\n    name\n  }\n  primaryLanguages {\n    value\n    name\n  }\n}\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "General",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profileGeneralInformation($patient: ID!) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    general {\n      patient\n      id\n      version\n      asOf\n      maritalStatus {\n        id\n        description\n      }\n      maternalMaidenName\n      adultsInHouse\n      childrenInHouse\n      occupation {\n        id\n        description\n      }\n      educationLevel {\n        id\n        description\n      }\n      primaryLanguage {\n        id\n        description\n      }\n      speaksEnglish {\n        id\n        description\n      }\n      stateHIVCase {\n        __typename\n        ... on Allowed {\n        value\n        }\n        ... on Restricted {\n        reason\n        }\n      }\n    }\n  }\n}\n",
												"variables": "{\n\t\"patient\": \"{{patient}}\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update General Information",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation general($input: GeneralInfoInput!) {\n  updatePatientGeneralInfo(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n\t\"input\": {\n\t\t\"patient\": {{patient}},\n\t\t\"asOf\": \"{{now}}\",\n\t\t\"maritalStatus\": \"U\",\n\t\t\"maternalMaidenName\": \"{{$randomLastName}}\",\n\t\t\"educationLevel\": \"13\",\n\t\t\"speaksEnglish\": \"Y\"\n\t}\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Birth",
							"item": [
								{
									"name": "Birth",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    birth {\n      patient\n      id\n      version\n      asOf\n      bornOn\n      age\n      multipleBirth {\n        id\n        description\n      }\n      birthOrder\n      city\n      state {\n        id\n        description\n      }\n      county {\n        id\n        description\n      }\n      country {\n        id\n        description\n      }\n    }\n  }\n}\n",
												"variables": "{\n\t\"patient\": \"{{patient}}\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Birth",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation birth($input: UpdateBirthAndGenderInput!) {\n  updatePatientBirthAndGender(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"asOf\": \"{{now}}\",\n    \"birth\": {\n      \"bornOn\": \"{{dateInPast}}\",\n      \"gender\": \"F\",\n      \"multipleBirth\": \"N\",\n      \"birthOrder\": \"1\",\n      \"city\": \"{{$randomCity}}\",\n      \"state\": \"39\",\n      \"county\": \"39061\",\n      \"country\": \"840\"\n    }\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Gender",
							"item": [
								{
									"name": "Gender Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query gender {\n  genders {\n    value\n    name\n  }\n  preferredGenders {\n    value\n    name\n  }\n  genderUnknownReasons {\n    value\n    name\n  }\n}\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Gender",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    gender {\n      patient\n      id\n      version\n      asOf\n      birth {\n        id\n        description\n      }\n      current {\n        id\n        description\n      }\n      unknownReason {\n        id\n        description\n      }\n      preferred {\n        id\n        description\n      }\n      additional\n    }\n  }\n}\n",
												"variables": "{\n\t\"patient\": \"{{patient}}\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Gender",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation gender($input: UpdateBirthAndGenderInput!) {\n  updatePatientBirthAndGender(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"asOf\": \"{{now}}\",\n    \"gender\": {\n      \"current\": \"U\",\n      \"unknownReason\": \"R\",\n      \"preferred\": \"446131000124102\",\n      \"additional\": \"{{$randomNoun}}\"\n    }\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Mortality",
							"item": [
								{
									"name": "Mortality Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query mortality($state: String) {\n  countries {\n    value\n    name\n  }\n  states {\n    value\n    name\n  }\n  counties(state: $state) {\n    value\n    name\n    group\n  }\n}\n",
												"variables": "{\n  \"state\": \"ROOT\"\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Mortality",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    mortality {\n      patient\n      id\n      version\n      asOf\n      deceased {\n        id\n        description\n      }\n      deceasedOn\n      city\n      state {\n        id\n        description\n      }\n      county {\n        id\n        description\n      }\n      country {\n        id\n        description\n      }\n    }\n  }\n}\n",
												"variables": "{\n\t\"patient\": \"{{patient}}\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Mortality Information",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation general($input: MortalityInput!) {\n  updatePatientMortality(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"asOf\": \"{{now}}\",\n    \"deceased\": \"UNK\",\n    \"deceasedOn\": \"{{dateInPast}}\",\n    \"city\": \"{{$randomCity}}\",\n    \"state\": \"51\",\n    \"county\": \"51057\",\n    \"country\": \"840\"\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Ethnicity",
							"item": [
								{
									"name": "Ethnicity Coded Values",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ethnicity {\n  ethnicGroups {\n    value\n    name\n  }\n  ethnicityUnknownReasons {\n    value\n    name\n  }\n  detailedEthnicities {\n    value\n    name\n  }\n}\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ethnicity",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query profile($patient: ID!) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    version\n    ethnicity {\n      patient\n      id\n      version\n      asOf\n      ethnicGroup {\n        id\n        description\n      }\n      unknownReason {\n        id\n        description\n      }\n      detailed {\n        id\n        description\n      }\n    }\n  }\n}\n",
												"variables": "{\n\t\"patient\": \"{{patient}}\"\n}"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Ethnicity",
									"protocolProfileBehavior": {
										"followRedirects": false,
										"followOriginalHttpMethod": false,
										"followAuthorizationHeader": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation updateEthnicity($input: EthnicityInput!) {\n  updateEthnicity(input: $input) {\n    patient\n  }\n}\n",
												"variables": "{\n  \"input\": {\n    \"patient\": \"{{patient}}\",\n    \"asOf\": \"{{now}}\",\n    \"ethnicGroup\": \"2135-2\",\n    \"detailed\": [\"2155-0\", \"2182-4\"]\n  }\n}\n"
											}
										},
										"url": {
											"raw": "{{base}}/graphql",
											"host": [
												"{{base}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Patient Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const patient = pm.response.json().data?.findPatientProfile?.id;",
									"pm.collectionVariables.set(\"patient\", patient);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query profile($patient: ID!) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    shortId\n    deletable\n  }\n}\n",
								"variables": "{\n    \"patient\": \"{{patient}}\"\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patient Profile (Short Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const patient = pm.response.json().data?.findPatientProfile?.id;",
									"pm.collectionVariables.set(\"patient\", patient);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query profile($short: Int!) {\n  findPatientProfile(shortId: $short) {\n    id\n    local\n    shortId\n    deletable\n  }\n}\n",
								"variables": "{\n    \"short\": 128175\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deletePatient($patient: ID!) {\n  deletePatient(patient: $patient) {\n    __typename\n    ... on PatientDeleteFailed {\n      patient\n      reason\n    }\n    ... on PatientDeleteSuccessful {\n      patient\n    }\n  }\n}\n",
								"variables": "{\n    \"patient\": \"{{patient}}\"\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Summary",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query profile($patient: ID!, $asOf: DateTime) {\n  findPatientProfile(patient: $patient) {\n    id\n    local\n    shortId\n    status\n    summary(asOf: $asOf) {\n      legalName {\n        prefix\n        first\n        middle\n        last\n        suffix\n      }\n      birthday\n      age\n      gender\n      ethnicity\n      races\n      address {\n        use\n        address\n        address2\n        city\n        state\n        zipcode\n        country\n      }\n      phone {\n        use\n        number\n      }\n      email {\n        use\n        address\n      }\n    }\n  }\n}\n",
								"variables": "{\n    \"patient\": \"{{patient}}\"\n}"
							}
						},
						"url": {
							"raw": "{{base}}/graphql",
							"host": [
								"{{base}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/encryption/decrypt",
			"item": [
				{
					"name": "decrypt",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "",
								"description": "describes the media type of the request",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "l7z0gSU1YSFvx9tamH7fJP0Ing8l1hxG5f1noafdpBtyIxIY658FE7CpAd6tKzWnAjavQWE=",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{base}}/encryption/decrypt",
							"host": [
								"{{base}}"
							],
							"path": [
								"encryption",
								"decrypt"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/encryption/encrypt",
			"item": [
				{
					"name": "encrypt",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"q\":\"hi\",\"other\":\"12345\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/encryption/encrypt",
							"host": [
								"{{base}}"
							],
							"path": [
								"encryption",
								"encrypt"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/investigation/export/csv",
			"item": [
				{
					"name": "generateInvestigationCsv",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "",
								"description": "describes the media type of the request"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base}}/investigation/export/csv",
							"host": [
								"{{base}}"
							],
							"path": [
								"investigation",
								"export",
								"csv"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/investigation/export/pdf",
			"item": [
				{
					"name": "generateInvestigationPdf",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "",
								"description": "describes the media type of the request"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base}}/investigation/export/pdf",
							"host": [
								"{{base}}"
							],
							"path": [
								"investigation",
								"export",
								"pdf"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/labreport/export/csv",
			"item": [
				{
					"name": "generateLabReportCsv",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "",
								"description": "describes the media type of the request"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base}}/labreport/export/csv",
							"host": [
								"{{base}}"
							],
							"path": [
								"labreport",
								"export",
								"csv"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/labreport/export/pdf",
			"item": [
				{
					"name": "generateLabReportPdf",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "",
								"description": "describes the media type of the request"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base}}/labreport/export/pdf",
							"host": [
								"{{base}}"
							],
							"path": [
								"labreport",
								"export",
								"pdf"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Me",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/me",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configuration",
					"protocolProfileBehavior": {
						"followRedirects": false,
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/configuration",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"configuration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Options",
			"item": [
				{
					"name": "Concepts",
					"item": [
						{
							"name": "All Concepts by Value Set",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/concepts/:name",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"concepts",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "P_RACE_CAT"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Specific Concepts by Value Set",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/concepts/:name/search?criteria=",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"concepts",
										":name",
										"search"
									],
									"query": [
										{
											"key": "criteria",
											"value": ""
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "BUS_OBJ_TYPE"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Conditions",
					"item": [
						{
							"name": "All Conditions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/conditions",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"conditions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Specific Conditions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/conditions/search?criteria=we",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"conditions",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "criteria",
											"value": "we"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Specific Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/users/search?criteria=a&limit=4",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"users",
										"search"
									],
									"query": [
										{
											"key": "criteria",
											"value": "a"
										},
										{
											"key": "limit",
											"value": "4"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Languages",
					"item": [
						{
							"name": "All Primary languages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/languages/primary",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"languages",
										"primary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Specific Primary languages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/languages/primary/search?criteria=w",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"languages",
										"primary",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "criteria",
											"value": "w"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Occupations",
					"item": [
						{
							"name": "All Occupations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/occupations",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"occupations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Specific Occupations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/nbs/api/options/occupations/search?criteria=w",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"options",
										"occupations",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "criteria",
											"value": "w"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Resulted Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/options/resulted-tests/search?criteria=&limit=4",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"options",
								"resulted-tests",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": ""
								},
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Coded Result",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/options/coded-result/search?criteria=abnor&limit=4",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"options",
								"coded-result",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "abnor"
								},
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Jurisdictions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/options/jurisdictions/search?criteria=&limit=4",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"options",
								"jurisdictions",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": ""
								},
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/options/providers/search?criteria=",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"options",
								"providers",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": ""
								},
								{
									"key": "limit",
									"value": "4",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Program Areas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/options/program-areas/search?criteria=&limit=4",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"options",
								"program-areas",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": ""
								},
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Facilities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/options/facilities/search?criteria=&limit=4",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"options",
								"facilities",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": ""
								},
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "File",
					"item": [
						{
							"name": "Summary",
							"item": [
								{
									"name": "Open Investigations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patient/{{patient}}/investigations/open",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patient",
												"{{patient}}",
												"investigations",
												"open"
											]
										}
									},
									"response": []
								},
								{
									"name": "Documents Requiring Review",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patients/{{patient}}/documents-requiring-review",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patients",
												"{{patient}}",
												"documents-requiring-review"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Events",
							"item": [
								{
									"name": "Investigations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patient/{{patient}}/investigations",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patient",
												"{{patient}}",
												"investigations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Demographics",
							"item": [
								{
									"name": "Demographics Summary",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patients/{{patient}}/demographics",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patients",
												"{{patient}}",
												"demographics"
											]
										}
									},
									"response": []
								},
								{
									"name": "Administrative",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patients/{{patient}}/demographics/administrative",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patients",
												"{{patient}}",
												"demographics",
												"administrative"
											]
										}
									},
									"response": []
								},
								{
									"name": "Phones",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patients/{{patient}}/demographics/phones",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patients",
												"{{patient}}",
												"demographics",
												"phones"
											]
										}
									},
									"response": []
								},
								{
									"name": "Addresses",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base}}/nbs/api/patients/{{patient}}/demographics/addresses",
											"host": [
												"{{base}}"
											],
											"path": [
												"nbs",
												"api",
												"patients",
												"{{patient}}",
												"demographics",
												"addresses"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Patient File",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const patient = pm.response.json().id;",
											"pm.collectionVariables.set(\"patient\", patient);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/nbs/api/patients/{{patient-id}}/file",
									"host": [
										"{{base}}"
									],
									"path": [
										"nbs",
										"api",
										"patients",
										"{{patient-id}}",
										"file"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base}}/nbs/api/patients/{{patient}}",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"patients",
								"{{patient}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const patient = pm.response.json().id;",
									"pm.collectionVariables.set(\"patient\", patient);",
									"",
									"const patientId = pm.response.json().shortId;",
									"pm.collectionVariables.set(\"patient-id\", patientId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"administrative\": {\n        \"asOf\": \"{{localDate}}\",\n        \"comment\": \"Developer testing the creation of a patient\"\n    },\n    \"names\": [\n        {\n            \"asOf\": \"{{localDate}}\",\n            \"type\": \"L\",\n            \"first\": \"{{$randomFirstName}}\",\n            \"middle\": \"{{$randomFirstName}}\",\n            \"last\": \"{{$randomLastName}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/nbs/api/profile",
							"host": [
								"{{base}}"
							],
							"path": [
								"nbs",
								"api",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const token = pm.response.json().token;",
							"pm.environment.set(\"token\", token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false,
				"followOriginalHttpMethod": false,
				"followAuthorizationHeader": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "describes the media type of the request"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user}}\"\n}"
				},
				"url": {
					"raw": "{{base}}/login",
					"host": [
						"{{base}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const lodash = require('lodash');",
					"",
					"const now = new Date()",
					"pm.collectionVariables.set('now', now.toISOString())",
					"",
					"pm.collectionVariables.set(",
					"    'localDate', ",
					"    now.toLocaleDateString(",
					"        'en-us',",
					"         { year: \"numeric\", month: \"2-digit\", day: \"2-digit\"}",
					"    )",
					")",
					"",
					"pm.collectionVariables.set (\"randomCountryCode\", lodash.random (1,9));",
					"pm.collectionVariables.set (\"randomExtension\", lodash.random (1000,9999));",
					"pm.collectionVariables.set (\"randomIdentificationNumber\", lodash.random (100000000,999999999));",
					"",
					"",
					"const randomDate = (start, end) =>  new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
					"",
					"const past = randomDate(new Date(1940, 0, 1), now).toISOString().substring(0,10);",
					"",
					"pm.collectionVariables.set (\"dateInPast\", past);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user",
			"value": "superuser",
			"type": "string"
		},
		{
			"key": "now",
			"value": ""
		},
		{
			"key": "dateInPast",
			"value": ""
		},
		{
			"key": "localDate",
			"value": ""
		},
		{
			"key": "patient",
			"value": ""
		},
		{
			"key": "patient-id",
			"value": ""
		},
		{
			"key": "address",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		},
		{
			"key": "randomExtension",
			"value": ""
		},
		{
			"key": "randomCountryCode",
			"value": ""
		},
		{
			"key": "randomIdentificationNumber",
			"value": ""
		},
		{
			"key": "identification",
			"value": ""
		}
	]
}