type Mutation {
    updatePatientGeneralInfo(input: GeneralInfoInput!): PatientGeneralChangeResult!
    updatePatientBirthAndGender(input: UpdateBirthAndGenderInput!): PatientBirthAndGenderChangeResult!
    updatePatientMortality(input: MortalityInput!): PatientMortalityChangeResult!
    updateEthnicity(input: EthnicityInput!): PatientEthnicityChangeResult!
    addPatientRace(input: RaceInput!): PatientRaceAddResult!
    updatePatientRace(input: RaceInput!): PatientRaceChangeSuccessful!
    deletePatientRace(input: DeletePatientRace!): PatientRaceChangeSuccessful!
}

type PatientUpdateResponse {
    patientId: ID!
}

input GeneralInfoInput {
    patient: Int!
    asOf: Date!
    maritalStatus: String
    maternalMaidenName: String
    adultsInHouse: Int
    childrenInHouse: Int
    occupation: String
    educationLevel: String
    primaryLanguage: String
    speaksEnglish: String
    stateHIVCase: String
}

type PatientGeneralChangeResult {
    patient: Int!
}

input MortalityInput {
    patient: Int!
    asOf: Date!
    deceased: String
    deceasedOn: Date
    city: String
    state: String
    county: String
    country: String
}

type PatientMortalityChangeResult {
    patient: Int!
}

input AdministrativeInput {
    patient: Int!
    asOf: Date!
    comment: String
}

type PatientAdministrativeChangeResult {
    patient: Int!
}


input EthnicityInput {
    patient: String!
    asOf: Date!
    ethnicGroup: String
    unknownReason: String
    detailed: [String!]
}

type PatientEthnicityChangeResult {
    patient: String!
}

input RaceInput {
    patient: Int!
    asOf: Date
    category: String!
    detailed: [String!]
}

input DeletePatientRace {
    patient: Int!
    category: String!
}

type PatientRaceChangeSuccessful {
    patient: Int!
}

type PatientRaceChangeFailureExistingCategory {
    patient: Int!
    category: String!
}

union PatientRaceAddResult = PatientRaceChangeSuccessful | PatientRaceChangeFailureExistingCategory

input UpdateBirthAndGenderInput {
    patient: ID!
    asOf: Date!
    birth: UpdateBirthInput
    gender: UpdateGenderInput
}

input UpdateBirthInput {
    bornOn: Date
    gender:String
    multipleBirth: String
    birthOrder: Int
    city: String
    state: String
    county: String
    country: String
}

input UpdateGenderInput {
    current: String
    unknownReason: String
    preferred: String
    additional: String
}

type PatientBirthAndGenderChangeResult {
    patient: Int!
}
