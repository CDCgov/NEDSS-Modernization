input IdentificationCriteria {
  identificationNumber: String
  identificationType: String
  assigningAuthority: String
}

input PersonFilter {
  id: String
  lastName: String
  firstName: String
  race: String
  identification: IdentificationCriteria
  phoneNumber: String
  email: String
  dateOfBirth: Date
  dateOfBirthOperator: Operator
  dateOfBirthDay: Int
  dateOfBirthMonth: Int
  dateOfBirthYear: Int
  dateOfBirthLow: Date
  dateOfBirthHigh: Date
  gender: String
  deceased: Deceased
  address: String
  city: String
  state: String
  country: String
  zip: String
  mortalityStatus: String
  ethnicity: String
  vaccinationId: String
  treatmentId: String
  disableSoundex: Boolean
  recordStatus: [RecordStatus!]!
}

enum Gender {
  M
  F
  U
}

enum Deceased {
  Y
  N
  UNK
}

enum Operator {
  EQUAL
  BEFORE
  AFTER
}

type PatientSearchResultIdentification {
  type: String!
  value: String!
}

type PatientSearchResultName {
  type: String
  first: String
  middle: String
  last: String
  suffix: String
}

type PatientSearchResultPhone {
  extension: String
  number: String
  type: String
  use: String
}

type PatientSearchResultAddress {
  type: String
  use: String
  address: String
  address2: String
  city: String
  county: String
  state: String
  zipcode: String
}

type PatientSearchResult {
  patient: Int!
  birthday: Date
  age: Int
  gender: String
  status: String!
  shortId: Int!
  legalName: PatientSearchResultName
  names: [PatientSearchResultName!]!
  identification: [PatientSearchResultIdentification!]!
  addresses: [PatientSearchResultAddress!]!
  phones: [String!]!
  emails: [String!]!
  detailedPhones: [PatientSearchResultPhone!]!
}

type PatientSearchResults {
  content: [PatientSearchResult!]!
  total: Int!
  page: Int!
  size: Int!
}

type Query {
  findPatientsByFilter(
    filter: PersonFilter!
    page: SortablePage
    share: String
  ): PatientSearchResults!
}
