buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
        classpath("com.dipien:semantic-version-gradle-plugin:2.0.0")
    }

    ext {
        testFailures = 0
    }
}

plugins {
    id "org.sonarqube" version "3.5.0.2730"
}

version = '1.0.1-SNAPSHOT'  // The plugin will assign the root project version to all its subprojects.
apply plugin: "com.dipien.semantic-version"

subprojects {

    repositories {
        mavenCentral()
        maven {
            url "https://packages.confluent.io/maven"
        }
    }

    if (!name.contains("-ui")) {

        apply plugin: 'java'
        apply plugin: 'jacoco'

        // Displays cucumber test results
        apply from: "${rootDir}/gradle/cucumber-logging.gradle"

        jacocoTestReport {
            dependsOn test
            reports {
                xml.required = true
            }
            //  Excludes files named *Application.class to exclude @SpringBootApplication entry point classes.
            afterEvaluate {
                classDirectories.setFrom(
                        files(
                                classDirectories.files.collect {
                                    fileTree(dir: it, exclude: ['**/**Application.class'])
                                }
                        )
                )
            }
        }

        tasks.named('test') {
            finalizedBy tasks.named('jacocoTestReport', JacocoReport)
        }

    }
}

gradle.buildFinished {
    def failures = rootProject.ext.testFailures

    if (failures > 0) { // check if any tests failed
        throw new GradleException("The build finished but ${rootProject.ext.testFailures} tests failed! ")
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "CDCgov_NEDSS-Modernization"
        property "sonar.organization", "cdcgov"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/apps/modernization-api/build/reports/jacoco/test/jacocoTestReport.xml,${rootDir}/coverage-report/build/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"
    }
}
