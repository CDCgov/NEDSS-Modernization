var e=new TextDecoder;async function t(t,n){if(!t.ok||!t.body||t.bodyUsed)return t;const i=t.headers.get("content-type");if(!i||!~i.indexOf("multipart/mixed"))return t;const r=i.indexOf("boundary="),s=r+9,o=i.indexOf(";",s);return async function*(t,n,i){const r=t.getReader(),s=!i||!i.multiple;let o=n.length,d="",l=!0,a=[];try{let t;e:for(;!(t=await r.read()).done;){const i=e.decode(t.value),r=i.indexOf(n);let c=d.length;for(d+=i,~r?c+=r:c=d.indexOf(n),a=[];~c;){const e=d.substring(0,c),t=d.substring(c+o);if(l)l=!1,n="\r\n"+n,o+=2;else{const n={},i=e.indexOf("\r\n\r\n")+4,r=String(d.slice(0,i)).trim().split("\r\n");let o;for(;o=r.shift();)o=o.split(": "),n[o.shift().toLowerCase()]=o.join(": ");const l=e.lastIndexOf("\r\n",i);let c=e.substring(i,l>-1?void 0:l),f=!1;if(o=n["content-type"],o&&~o.indexOf("application/json"))try{c=JSON.parse(c),f=!0}catch(e){}if(o={headers:n,body:c,json:f},s?yield o:a.push(o),"--"===t.substring(0,2))break e}d=t,c=d.indexOf(n)}a.length&&(yield a)}}finally{a.length&&(yield a),await r.cancel()}}(t.body,`--${~r?i.substring(s,o>-1?o:void 0).replace(/['"]/g,"").trim():"-"}`,n)}exports.meros=t;