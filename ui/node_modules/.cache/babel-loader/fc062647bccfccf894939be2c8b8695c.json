{"ast":null,"code":"import { getLocation } from './location.mjs';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[`${lineNum} |`, subLines[0]], ...subLines.slice(1, subLineIndex + 1).map(subLine => ['|', subLine]), ['|', '^'.padStart(subLineColumnNum)], ['|', subLines[subLineIndex + 1]]]);\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [`${lineNum - 1} |`, lines[lineIndex - 1]], [`${lineNum} |`, locationLine], ['|', '^'.padStart(columnNum)], [`${lineNum + 1} |`, lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(_ref => {\n    let [_, line] = _ref;\n    return line !== undefined;\n  });\n  const padLen = Math.max(...existingLines.map(_ref2 => {\n    let [prefix] = _ref2;\n    return prefix.length;\n  }));\n  return existingLines.map(_ref3 => {\n    let [prefix, line] = _ref3;\n    return prefix.padStart(padLen) + (line ? ' ' + line : '');\n  }).join('\\n');\n}","map":{"version":3,"names":["getLocation","printLocation","location","printSourceLocation","source","start","sourceLocation","firstLineColumnOffset","locationOffset","column","body","padStart","lineIndex","line","lineOffset","lineNum","columnOffset","columnNum","locationStr","name","lines","split","locationLine","length","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","filter","_","undefined","padLen","max","prefix","join"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/language/printLocation.mjs"],"sourcesContent":["import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}