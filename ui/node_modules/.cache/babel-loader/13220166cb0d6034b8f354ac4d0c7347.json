{"ast":null,"code":"var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\n\n\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;","map":{"version":3,"names":["asciiWords","require","hasUnicodeWord","toString","unicodeWords","words","string","pattern","guard","undefined","match","module","exports"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/lodash/words.js"],"sourcesContent":["var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAAxB;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAD5B;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAFtB;AAAA,IAGIG,YAAY,GAAGH,OAAO,CAAC,iBAAD,CAH1B;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuC;EACrCF,MAAM,GAAGH,QAAQ,CAACG,MAAD,CAAjB;EACAC,OAAO,GAAGC,KAAK,GAAGC,SAAH,GAAeF,OAA9B;;EAEA,IAAIA,OAAO,KAAKE,SAAhB,EAA2B;IACzB,OAAOP,cAAc,CAACI,MAAD,CAAd,GAAyBF,YAAY,CAACE,MAAD,CAArC,GAAgDN,UAAU,CAACM,MAAD,CAAjE;EACD;;EACD,OAAOA,MAAM,CAACI,KAAP,CAAaH,OAAb,KAAyB,EAAhC;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,KAAjB"},"metadata":{},"sourceType":"script"}