{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/EventSearch/generalSearch.tsx\";\nimport { EventType, PregnancyStatus } from '../../generated/graphql/schema';\nimport { SelectControl } from '../FormInputs/SelectControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GeneralSearch = _ref => {\n  let {\n    control,\n    searchType = ''\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [searchType === EventType.Investigation && /*#__PURE__*/_jsxDEV(SelectControl, {\n      control: control,\n      name: \"condition\",\n      label: \"Condition:\",\n      onChangeMethod: e => console.log(e),\n      options: [{\n        name: 'ALL',\n        value: 'all'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SelectControl, {\n      control: control,\n      name: \"programArea\",\n      label: \"Program Area:\",\n      onChangeMethod: e => console.log(e),\n      options: [{\n        name: 'ALL',\n        value: 'all'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectControl, {\n      control: control,\n      name: \"jurisdiction\",\n      label: \"Jurisdiction:\",\n      onChangeMethod: e => console.log(e),\n      options: [{\n        name: 'ALL',\n        value: 'all'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectControl, {\n      control: control,\n      name: \"pregnancyTest\",\n      label: \"Pregnancy Test:\",\n      onChangeMethod: e => console.log(e),\n      options: [{\n        name: PregnancyStatus.Yes,\n        value: PregnancyStatus.Yes\n      }, {\n        name: PregnancyStatus.No,\n        value: PregnancyStatus.No\n      }, {\n        name: PregnancyStatus.Unknown,\n        value: PregnancyStatus.Unknown\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = GeneralSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralSearch\");","map":{"version":3,"names":["EventType","PregnancyStatus","SelectControl","GeneralSearch","control","searchType","Investigation","e","console","log","name","value","Yes","No","Unknown"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/EventSearch/generalSearch.tsx"],"sourcesContent":["import { Control, FieldValues } from 'react-hook-form';\nimport { EventType, PregnancyStatus } from '../../generated/graphql/schema';\nimport { SelectControl } from '../FormInputs/SelectControl';\n\ntype GeneralSearchProps = {\n    control: Control<FieldValues, any>;\n    searchType?: string;\n};\n\nexport const GeneralSearch = ({ control, searchType = '' }: GeneralSearchProps) => {\n    return (\n        <>\n            {searchType === EventType.Investigation && (\n                <SelectControl\n                    control={control}\n                    name=\"condition\"\n                    label=\"Condition:\"\n                    onChangeMethod={(e) => console.log(e)}\n                    options={[\n                        {\n                            name: 'ALL',\n                            value: 'all'\n                        }\n                    ]}\n                />\n            )}\n            <SelectControl\n                control={control}\n                name=\"programArea\"\n                label=\"Program Area:\"\n                onChangeMethod={(e) => console.log(e)}\n                options={[\n                    {\n                        name: 'ALL',\n                        value: 'all'\n                    }\n                ]}\n            />\n            <SelectControl\n                control={control}\n                name=\"jurisdiction\"\n                label=\"Jurisdiction:\"\n                onChangeMethod={(e) => console.log(e)}\n                options={[\n                    {\n                        name: 'ALL',\n                        value: 'all'\n                    }\n                ]}\n            />\n            <SelectControl\n                control={control}\n                name=\"pregnancyTest\"\n                label=\"Pregnancy Test:\"\n                onChangeMethod={(e) => console.log(e)}\n                options={[\n                    { name: PregnancyStatus.Yes, value: PregnancyStatus.Yes },\n                    { name: PregnancyStatus.No, value: PregnancyStatus.No },\n                    { name: PregnancyStatus.Unknown, value: PregnancyStatus.Unknown }\n                ]}\n            />\n        </>\n    );\n};\n"],"mappings":";AACA,SAASA,SAAT,EAAoBC,eAApB,QAA2C,gCAA3C;AACA,SAASC,aAAT,QAA8B,6BAA9B;;;AAOA,OAAO,MAAMC,aAAa,GAAG,QAAsD;EAAA,IAArD;IAAEC,OAAF;IAAWC,UAAU,GAAG;EAAxB,CAAqD;EAC/E,oBACI;IAAA,WACKA,UAAU,KAAKL,SAAS,CAACM,aAAzB,iBACG,QAAC,aAAD;MACI,OAAO,EAAEF,OADb;MAEI,IAAI,EAAC,WAFT;MAGI,KAAK,EAAC,YAHV;MAII,cAAc,EAAGG,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJ3B;MAKI,OAAO,EAAE,CACL;QACIG,IAAI,EAAE,KADV;QAEIC,KAAK,EAAE;MAFX,CADK;IALb;MAAA;MAAA;MAAA;IAAA,QAFR,eAeI,QAAC,aAAD;MACI,OAAO,EAAEP,OADb;MAEI,IAAI,EAAC,aAFT;MAGI,KAAK,EAAC,eAHV;MAII,cAAc,EAAGG,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJ3B;MAKI,OAAO,EAAE,CACL;QACIG,IAAI,EAAE,KADV;QAEIC,KAAK,EAAE;MAFX,CADK;IALb;MAAA;MAAA;MAAA;IAAA,QAfJ,eA2BI,QAAC,aAAD;MACI,OAAO,EAAEP,OADb;MAEI,IAAI,EAAC,cAFT;MAGI,KAAK,EAAC,eAHV;MAII,cAAc,EAAGG,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJ3B;MAKI,OAAO,EAAE,CACL;QACIG,IAAI,EAAE,KADV;QAEIC,KAAK,EAAE;MAFX,CADK;IALb;MAAA;MAAA;MAAA;IAAA,QA3BJ,eAuCI,QAAC,aAAD;MACI,OAAO,EAAEP,OADb;MAEI,IAAI,EAAC,eAFT;MAGI,KAAK,EAAC,iBAHV;MAII,cAAc,EAAGG,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJ3B;MAKI,OAAO,EAAE,CACL;QAAEG,IAAI,EAAET,eAAe,CAACW,GAAxB;QAA6BD,KAAK,EAAEV,eAAe,CAACW;MAApD,CADK,EAEL;QAAEF,IAAI,EAAET,eAAe,CAACY,EAAxB;QAA4BF,KAAK,EAAEV,eAAe,CAACY;MAAnD,CAFK,EAGL;QAAEH,IAAI,EAAET,eAAe,CAACa,OAAxB;QAAiCH,KAAK,EAAEV,eAAe,CAACa;MAAxD,CAHK;IALb;MAAA;MAAA;MAAA;IAAA,QAvCJ;EAAA,gBADJ;AAqDH,CAtDM;KAAMX,a"},"metadata":{},"sourceType":"module"}