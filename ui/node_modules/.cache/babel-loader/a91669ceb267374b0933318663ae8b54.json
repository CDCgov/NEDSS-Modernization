{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/providers/UserContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { UserControllerService } from '../generated/services/UserControllerService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = 'nbs_user=';\nconst TOKEN = 'nbs_token=';\n\n// Grab token from cookie as it is updated on every request\nconst getToken = () => {\n  if (document.cookie.includes(TOKEN)) {\n    const tokenStart = document.cookie.indexOf(TOKEN) + TOKEN.length;\n    const tokenEnd = document.cookie.indexOf(';', tokenStart);\n    return document.cookie.substring(tokenStart, tokenEnd > -1 ? tokenEnd : document.cookie.length);\n  } else {\n    return undefined;\n  }\n}; // proxied requests set the USER_ID cookie. use it on initialization to log in\n\n\nconst getUserIdFromCookie = () => {\n  if (document.cookie.includes(USER_ID)) {\n    const userIdStart = document.cookie.indexOf(USER_ID) + USER_ID.length;\n    const userIdEnd = document.cookie.indexOf(';', userIdStart);\n    return document.cookie.substring(userIdStart, userIdEnd > -1 ? userIdEnd : document.cookie.length);\n  } else {\n    return undefined;\n  }\n};\n\nconst initialState = {\n  isLoggedIn: false,\n  isLoginPending: getUserIdFromCookie() ? true : false,\n  loginError: undefined,\n  userId: undefined,\n  displayName: undefined,\n  getToken\n};\nexport const UserContext = /*#__PURE__*/React.createContext({\n  state: initialState,\n  login: async (a, b) => {\n    return true;\n  },\n  logout: () => {}\n});\nexport const UserContextProvider = props => {\n  _s();\n\n  const [state, setState] = React.useState({ ...initialState\n  });\n\n  const setLoginPending = isLoginPending => setState({ ...state,\n    isLoginPending,\n    loginError: undefined\n  });\n\n  const setLoginSuccess = (userId, displayName) => setState({ ...initialState,\n    isLoggedIn: true,\n    userId,\n    displayName\n  });\n\n  const setLoginError = loginError => setState({ ...initialState,\n    loginError\n  });\n\n  const login = async (username, password) => {\n    setLoginPending(true);\n    const success = await UserControllerService.loginUsingPost({\n      request: {\n        username,\n        password\n      }\n    }).then(response => {\n      setLoginSuccess(response.username, response.displayName);\n      return true;\n    }).catch(ex => {\n      if (ex.status === 401) {\n        setLoginError('Incorrect username or password');\n      } else {\n        setLoginError('Login failed');\n      }\n\n      return false;\n    });\n    return success;\n  };\n\n  const logout = () => {\n    // delete cookies\n    document.cookie = USER_ID + '=; Max-Age=0; path=/;';\n    document.cookie = TOKEN + '=; Max-Age=0; path=/;'; // reset state\n\n    setState({ ...initialState\n    });\n  }; // on init attempt to login using USER_ID cookie\n\n\n  useEffect(() => {\n    const userIdFromCookie = getUserIdFromCookie();\n\n    if (userIdFromCookie) {\n      login(userIdFromCookie, '');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      state,\n      login,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserContextProvider, \"S9Vr8JU5mFV1/D+fuf3ZvN0jnyg=\");\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","useEffect","UserControllerService","USER_ID","TOKEN","getToken","document","cookie","includes","tokenStart","indexOf","length","tokenEnd","substring","undefined","getUserIdFromCookie","userIdStart","userIdEnd","initialState","isLoggedIn","isLoginPending","loginError","userId","displayName","UserContext","createContext","state","login","a","b","logout","UserContextProvider","props","setState","useState","setLoginPending","setLoginSuccess","setLoginError","username","password","success","loginUsingPost","request","then","response","catch","ex","status","userIdFromCookie","children"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/providers/UserContext.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { ApiError } from '../generated';\nimport { UserControllerService } from '../generated/services/UserControllerService';\nconst USER_ID = 'nbs_user=';\nconst TOKEN = 'nbs_token=';\n\ninterface UserState {\n    isLoggedIn: boolean;\n    isLoginPending: boolean;\n    loginError: string | undefined;\n    userId: string | undefined;\n    displayName: string | undefined;\n    getToken: () => string | undefined;\n}\n\n// Grab token from cookie as it is updated on every request\nconst getToken = (): string | undefined => {\n    if (document.cookie.includes(TOKEN)) {\n        const tokenStart = document.cookie.indexOf(TOKEN) + TOKEN.length;\n        const tokenEnd = document.cookie.indexOf(';', tokenStart);\n        return document.cookie.substring(tokenStart, tokenEnd > -1 ? tokenEnd : document.cookie.length);\n    } else {\n        return undefined;\n    }\n};\n\n// proxied requests set the USER_ID cookie. use it on initialization to log in\nconst getUserIdFromCookie = (): string | undefined => {\n    if (document.cookie.includes(USER_ID)) {\n        const userIdStart = document.cookie.indexOf(USER_ID) + USER_ID.length;\n        const userIdEnd = document.cookie.indexOf(';', userIdStart);\n        return document.cookie.substring(userIdStart, userIdEnd > -1 ? userIdEnd : document.cookie.length);\n    } else {\n        return undefined;\n    }\n};\n\nconst initialState: UserState = {\n    isLoggedIn: false,\n    isLoginPending: getUserIdFromCookie() ? true : false,\n    loginError: undefined,\n    userId: undefined,\n    displayName: undefined,\n    getToken\n};\n\nexport const UserContext = React.createContext<{\n    state: UserState;\n    login: (username: string, password: string) => Promise<boolean>;\n    logout: () => void;\n}>({\n    state: initialState,\n    login: async (a, b) => {\n        return true;\n    },\n    logout: () => {}\n});\n\nexport const UserContextProvider = (props: any) => {\n    const [state, setState] = React.useState({ ...initialState });\n    const setLoginPending = (isLoginPending: boolean) => setState({ ...state, isLoginPending, loginError: undefined });\n    const setLoginSuccess = (userId: string, displayName: string) =>\n        setState({ ...initialState, isLoggedIn: true, userId, displayName });\n    const setLoginError = (loginError: string) => setState({ ...initialState, loginError });\n    const login = async (username: string, password: string): Promise<boolean> => {\n        setLoginPending(true);\n        const success: boolean = await UserControllerService.loginUsingPost({\n            request: { username, password }\n        })\n            .then((response) => {\n                setLoginSuccess(response.username, response.displayName);\n                return true;\n            })\n            .catch((ex: ApiError) => {\n                if (ex.status === 401) {\n                    setLoginError('Incorrect username or password');\n                } else {\n                    setLoginError('Login failed');\n                }\n                return false;\n            });\n        return success;\n    };\n\n    const logout = () => {\n        // delete cookies\n        document.cookie = USER_ID + '=; Max-Age=0; path=/;';\n        document.cookie = TOKEN + '=; Max-Age=0; path=/;';\n        // reset state\n        setState({ ...initialState });\n    };\n\n    // on init attempt to login using USER_ID cookie\n    useEffect(() => {\n        const userIdFromCookie = getUserIdFromCookie();\n        if (userIdFromCookie) {\n            login(userIdFromCookie, '');\n        }\n    }, []);\n\n    return <UserContext.Provider value={{ state, login, logout }}>{props.children}</UserContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}