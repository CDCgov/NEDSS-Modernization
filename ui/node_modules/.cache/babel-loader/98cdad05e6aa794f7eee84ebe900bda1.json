{"ast":null,"code":"import _objectSpread from\"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{DatePicker,Dropdown,ErrorMessage,FormGroup,Label,TextInput}from'@trussworks/react-uswds';import{useState}from'react';import'./PersonalDetails.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PersonalDetails(_ref){var personalDetailsFields=_ref.personalDetailsFields,updateCallback=_ref.updateCallback;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDobInvalid=_useState2[0],setIsDobInvalid=_useState2[1];var _useState3=useState('-'),_useState4=_slicedToArray(_useState3,2),yearsOld=_useState4[0],setYearsOld=_useState4[1];function handleDobChange(dob){var isInFuture=isDobInFuture(dob);setIsDobInvalid(isInFuture);setYearsOld(getYearsOld(dob));if(!isInFuture&&dob!=undefined){updateCallback(_objectSpread(_objectSpread({},personalDetailsFields),{},{dateOfBirth:dob}));}}function getYearsOld(){var a=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var dob=new Date(a);if(a==undefined||isNaN(dob.getTime())){return'-';}var timeDiff=Date.now()-new Date(a).getTime();var age=Math.floor(timeDiff/(1000*3600*24)/365.25);return age<0?'-':age.toString();}function isDobInFuture(dob){if(dob==undefined){return false;}var now=new Date().getTime();var date=Date.parse(dob);return now<date;}return/*#__PURE__*/_jsx(\"div\",{className:\"person-details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-container\",children:[/*#__PURE__*/_jsxs(FormGroup,{error:isDobInvalid,children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"dob\",error:isDobInvalid,children:\"DOB\"}),/*#__PURE__*/_jsx(DatePicker,{id:\"dob\",name:\"dob\",defaultValue:personalDetailsFields.dateOfBirth,onChange:handleDobChange,maxDate:new Date().toISOString()}),isDobInvalid?/*#__PURE__*/_jsx(ErrorMessage,{children:\"DOB cannot be in the future\"}):'']}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"current-age\",children:\"Current Age\"}),/*#__PURE__*/_jsx(\"div\",{className:\"age-text\",children:yearsOld})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"current-sex\",children:\"Current Sex\"}),/*#__PURE__*/_jsxs(Dropdown,{id:\"sex\",name:\"sex\",defaultValue:personalDetailsFields.sex,onChange:function onChange(e){return updateCallback(_objectSpread(_objectSpread({},personalDetailsFields),{},{sex:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),/*#__PURE__*/_jsx(\"option\",{value:\"F\",children:\"Female\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"U\",children:\"Unknown\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"birth-sex\",children:\"Birth Sex\"}),/*#__PURE__*/_jsxs(Dropdown,{id:\"birth-sex\",name:\"birth-sex\",defaultValue:personalDetailsFields.birthSex,onChange:function onChange(e){return updateCallback(_objectSpread(_objectSpread({},personalDetailsFields),{},{birthSex:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),/*#__PURE__*/_jsx(\"option\",{value:\"F\",children:\"Female\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"U\",children:\"Unknown\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"deceased\",children:\"Is the patient deceased\"}),/*#__PURE__*/_jsxs(Dropdown,{id:\"decease\",name:\"deceased\",defaultValue:personalDetailsFields.isPatientDeceased,onChange:function onChange(e){return updateCallback(_objectSpread(_objectSpread({},personalDetailsFields),{},{isPatientDeceased:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),/*#__PURE__*/_jsx(\"option\",{value:\"N\",children:\"No\"}),/*#__PURE__*/_jsx(\"option\",{value:\"UNK\",children:\"Unknown\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Y\",children:\"Yes\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"marital-status\",children:\"Marital Status\"}),/*#__PURE__*/_jsxs(Dropdown,{id:\"marital-status\",name:\"marital status\",defaultValue:personalDetailsFields.maritalStatus,onChange:function onChange(e){return updateCallback(_objectSpread(_objectSpread({},personalDetailsFields),{},{maritalStatus:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),/*#__PURE__*/_jsx(\"option\",{value:\"A\",children:\"Annulled\"}),/*#__PURE__*/_jsx(\"option\",{value:\"C\",children:\"Common Law\"}),/*#__PURE__*/_jsx(\"option\",{value:\"D\",children:\"Divorced\"}),/*#__PURE__*/_jsx(\"option\",{value:\"T\",children:\"Domestic partner\"}),/*#__PURE__*/_jsx(\"option\",{value:\"I\",children:\"Interlocutory\"}),/*#__PURE__*/_jsx(\"option\",{value:\"L\",children:\"Legally separated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"G\",children:\"Living Together\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M\",children:\"Married\"}),/*#__PURE__*/_jsx(\"option\",{value:\"O\",children:\"Other\"}),/*#__PURE__*/_jsx(\"option\",{value:\"P\",children:\"Polygamous\"}),/*#__PURE__*/_jsx(\"option\",{value:\"R\",children:\"Refused to answer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"E\",children:\"Separated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"S\",children:\"Single, never married\"}),/*#__PURE__*/_jsx(\"option\",{value:\"U\",children:\"Unknown\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B\",children:\"Unmarried\"}),/*#__PURE__*/_jsx(\"option\",{value:\"F\",children:\"Unreported\"}),/*#__PURE__*/_jsx(\"option\",{value:\"W\",children:\"Widowed\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"hiv-case-id\",children:\"State HIV Case ID\"}),/*#__PURE__*/_jsx(TextInput,{id:\"hiv-case-number\",name:\"hiv-case-number\",type:'text',defaultValue:personalDetailsFields.stateHivCaseId,onChange:function onChange(e){return updateCallback(_objectSpread(_objectSpread({},personalDetailsFields),{},{stateHivCaseId:e.target.value}));}})]})]})});}","map":{"version":3,"names":["DatePicker","Dropdown","ErrorMessage","FormGroup","Label","TextInput","useState","PersonalDetails","personalDetailsFields","updateCallback","isDobInvalid","setIsDobInvalid","yearsOld","setYearsOld","handleDobChange","dob","isInFuture","isDobInFuture","getYearsOld","undefined","dateOfBirth","a","Date","isNaN","getTime","timeDiff","now","age","Math","floor","toString","date","parse","toISOString","sex","e","target","value","birthSex","isPatientDeceased","maritalStatus","stateHivCaseId"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/pages/addPatient/components/personalDetails/PersonalDetails.tsx"],"sourcesContent":["import { DatePicker, Dropdown, ErrorMessage, FormGroup, Label, TextInput } from '@trussworks/react-uswds';\nimport { useState } from 'react';\nimport './PersonalDetails.scss';\n\nexport interface InputPersonalDetailsFields {\n    dateOfBirth: string;\n    sex: string;\n    birthSex: string;\n    isPatientDeceased: string;\n    maritalStatus: string;\n    stateHivCaseId: string;\n}\nexport default function PersonalDetails({\n    personalDetailsFields,\n    updateCallback\n}: {\n    personalDetailsFields: InputPersonalDetailsFields;\n    updateCallback: (inputNameFields: InputPersonalDetailsFields) => void;\n}) {\n    const [isDobInvalid, setIsDobInvalid] = useState(false);\n    const [yearsOld, setYearsOld] = useState('-');\n\n    function handleDobChange(dob: string | undefined): void {\n        const isInFuture = isDobInFuture(dob);\n        setIsDobInvalid(isInFuture);\n        setYearsOld(getYearsOld(dob));\n        if (!isInFuture && dob != undefined) {\n            updateCallback({ ...personalDetailsFields, dateOfBirth: dob });\n        }\n    }\n\n    function getYearsOld(a: string = ''): string {\n        const dob = new Date(a);\n        if (a == undefined || isNaN(dob.getTime())) {\n            return '-';\n        }\n\n        const timeDiff = Date.now() - new Date(a).getTime();\n        const age = Math.floor(timeDiff / (1000 * 3600 * 24) / 365.25);\n        return age < 0 ? '-' : age.toString();\n    }\n\n    function isDobInFuture(dob: string | undefined): boolean {\n        if (dob == undefined) {\n            return false;\n        }\n        const now = new Date().getTime();\n        const date = Date.parse(dob);\n        return now < date;\n    }\n\n    return (\n        <div className=\"person-details\">\n            <div className=\"flex-container\">\n                <FormGroup error={isDobInvalid}>\n                    <Label htmlFor=\"dob\" error={isDobInvalid}>\n                        DOB\n                    </Label>\n                    <DatePicker\n                        id=\"dob\"\n                        name=\"dob\"\n                        defaultValue={personalDetailsFields.dateOfBirth}\n                        onChange={handleDobChange}\n                        maxDate={new Date().toISOString()}\n                    />\n                    {isDobInvalid ? <ErrorMessage>DOB cannot be in the future</ErrorMessage> : ''}\n                </FormGroup>\n\n                <FormGroup>\n                    <Label htmlFor=\"current-age\">Current Age</Label>\n                    <div className=\"age-text\">{yearsOld}</div>\n                </FormGroup>\n\n                <FormGroup>\n                    <Label htmlFor=\"current-sex\">Current Sex</Label>\n                    <Dropdown\n                        id=\"sex\"\n                        name=\"sex\"\n                        defaultValue={personalDetailsFields.sex}\n                        onChange={(e) => updateCallback({ ...personalDetailsFields, sex: e.target.value })}>\n                        <option value=\"\"></option>\n                        <option value=\"F\">Female</option>\n                        <option value=\"M\">Male</option>\n                        <option value=\"U\">Unknown</option>\n                    </Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"birth-sex\">Birth Sex</Label>\n                    <Dropdown\n                        id=\"birth-sex\"\n                        name=\"birth-sex\"\n                        defaultValue={personalDetailsFields.birthSex}\n                        onChange={(e) => updateCallback({ ...personalDetailsFields, birthSex: e.target.value })}>\n                        <option value=\"\"></option>\n                        <option value=\"F\">Female</option>\n                        <option value=\"M\">Male</option>\n                        <option value=\"U\">Unknown</option>\n                    </Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"deceased\">Is the patient deceased</Label>\n                    <Dropdown\n                        id=\"decease\"\n                        name=\"deceased\"\n                        defaultValue={personalDetailsFields.isPatientDeceased}\n                        onChange={(e) =>\n                            updateCallback({ ...personalDetailsFields, isPatientDeceased: e.target.value })\n                        }>\n                        <option value=\"\"></option>\n                        <option value=\"N\">No</option>\n                        <option value=\"UNK\">Unknown</option>\n                        <option value=\"Y\">Yes</option>\n                    </Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"marital-status\">Marital Status</Label>\n                    <Dropdown\n                        id=\"marital-status\"\n                        name=\"marital status\"\n                        defaultValue={personalDetailsFields.maritalStatus}\n                        onChange={(e) => updateCallback({ ...personalDetailsFields, maritalStatus: e.target.value })}>\n                        <option value=\"\"></option>\n                        <option value=\"A\">Annulled</option>\n                        <option value=\"C\">Common Law</option>\n                        <option value=\"D\">Divorced</option>\n                        <option value=\"T\">Domestic partner</option>\n                        <option value=\"I\">Interlocutory</option>\n                        <option value=\"L\">Legally separated</option>\n                        <option value=\"G\">Living Together</option>\n                        <option value=\"M\">Married</option>\n                        <option value=\"O\">Other</option>\n                        <option value=\"P\">Polygamous</option>\n                        <option value=\"R\">Refused to answer</option>\n                        <option value=\"E\">Separated</option>\n                        <option value=\"S\">Single, never married</option>\n                        <option value=\"U\">Unknown</option>\n                        <option value=\"B\">Unmarried</option>\n                        <option value=\"F\">Unreported</option>\n                        <option value=\"W\">Widowed</option>\n                    </Dropdown>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"hiv-case-id\">State HIV Case ID</Label>\n                    <TextInput\n                        id=\"hiv-case-number\"\n                        name=\"hiv-case-number\"\n                        type={'text'}\n                        defaultValue={personalDetailsFields.stateHivCaseId}\n                        onChange={(e) => updateCallback({ ...personalDetailsFields, stateHivCaseId: e.target.value })}\n                    />\n                </FormGroup>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"iTAAA,OAASA,UAAT,CAAqBC,QAArB,CAA+BC,YAA/B,CAA6CC,SAA7C,CAAwDC,KAAxD,CAA+DC,SAA/D,KAAgF,yBAAhF,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAO,wBAAP,C,wFAUA,cAAe,SAASC,gBAAT,MAMZ,IALCC,sBAKD,MALCA,qBAKD,CAJCC,cAID,MAJCA,cAID,CACC,cAAwCH,QAAQ,CAAC,KAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eACA,eAAgCL,QAAQ,CAAC,GAAD,CAAxC,yCAAOM,QAAP,eAAiBC,WAAjB,eAEA,QAASC,gBAAT,CAAyBC,GAAzB,CAAwD,CACpD,GAAMC,WAAU,CAAGC,aAAa,CAACF,GAAD,CAAhC,CACAJ,eAAe,CAACK,UAAD,CAAf,CACAH,WAAW,CAACK,WAAW,CAACH,GAAD,CAAZ,CAAX,CACA,GAAI,CAACC,UAAD,EAAeD,GAAG,EAAII,SAA1B,CAAqC,CACjCV,cAAc,gCAAMD,qBAAN,MAA6BY,WAAW,CAAEL,GAA1C,GAAd,CACH,CACJ,CAED,QAASG,YAAT,EAA6C,IAAxBG,EAAwB,2DAAZ,EAAY,CACzC,GAAMN,IAAG,CAAG,GAAIO,KAAJ,CAASD,CAAT,CAAZ,CACA,GAAIA,CAAC,EAAIF,SAAL,EAAkBI,KAAK,CAACR,GAAG,CAACS,OAAJ,EAAD,CAA3B,CAA4C,CACxC,MAAO,GAAP,CACH,CAED,GAAMC,SAAQ,CAAGH,IAAI,CAACI,GAAL,GAAa,GAAIJ,KAAJ,CAASD,CAAT,EAAYG,OAAZ,EAA9B,CACA,GAAMG,IAAG,CAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAQ,EAAI,KAAO,IAAP,CAAc,EAAlB,CAAR,CAAgC,MAA3C,CAAZ,CACA,MAAOE,IAAG,CAAG,CAAN,CAAU,GAAV,CAAgBA,GAAG,CAACG,QAAJ,EAAvB,CACH,CAED,QAASb,cAAT,CAAuBF,GAAvB,CAAyD,CACrD,GAAIA,GAAG,EAAII,SAAX,CAAsB,CAClB,MAAO,MAAP,CACH,CACD,GAAMO,IAAG,CAAG,GAAIJ,KAAJ,GAAWE,OAAX,EAAZ,CACA,GAAMO,KAAI,CAAGT,IAAI,CAACU,KAAL,CAAWjB,GAAX,CAAb,CACA,MAAOW,IAAG,CAAGK,IAAb,CACH,CAED,mBACI,YAAK,SAAS,CAAC,gBAAf,uBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,MAAC,SAAD,EAAW,KAAK,CAAErB,YAAlB,wBACI,KAAC,KAAD,EAAO,OAAO,CAAC,KAAf,CAAqB,KAAK,CAAEA,YAA5B,iBADJ,cAII,KAAC,UAAD,EACI,EAAE,CAAC,KADP,CAEI,IAAI,CAAC,KAFT,CAGI,YAAY,CAAEF,qBAAqB,CAACY,WAHxC,CAII,QAAQ,CAAEN,eAJd,CAKI,OAAO,CAAE,GAAIQ,KAAJ,GAAWW,WAAX,EALb,EAJJ,CAWKvB,YAAY,cAAG,KAAC,YAAD,0CAAH,CAA8D,EAX/E,GADJ,cAeI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,aAAf,yBADJ,cAEI,YAAK,SAAS,CAAC,UAAf,UAA2BE,QAA3B,EAFJ,GAfJ,cAoBI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,aAAf,yBADJ,cAEI,MAAC,QAAD,EACI,EAAE,CAAC,KADP,CAEI,IAAI,CAAC,KAFT,CAGI,YAAY,CAAEJ,qBAAqB,CAAC0B,GAHxC,CAII,QAAQ,CAAE,kBAACC,CAAD,QAAO1B,eAAc,gCAAMD,qBAAN,MAA6B0B,GAAG,CAAEC,CAAC,CAACC,MAAF,CAASC,KAA3C,GAArB,EAJd,wBAKI,eAAQ,KAAK,CAAC,EAAd,EALJ,cAMI,eAAQ,KAAK,CAAC,GAAd,oBANJ,cAOI,eAAQ,KAAK,CAAC,GAAd,kBAPJ,cAQI,eAAQ,KAAK,CAAC,GAAd,qBARJ,GAFJ,GApBJ,cAiCI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,WAAf,uBADJ,cAEI,MAAC,QAAD,EACI,EAAE,CAAC,WADP,CAEI,IAAI,CAAC,WAFT,CAGI,YAAY,CAAE7B,qBAAqB,CAAC8B,QAHxC,CAII,QAAQ,CAAE,kBAACH,CAAD,QAAO1B,eAAc,gCAAMD,qBAAN,MAA6B8B,QAAQ,CAAEH,CAAC,CAACC,MAAF,CAASC,KAAhD,GAArB,EAJd,wBAKI,eAAQ,KAAK,CAAC,EAAd,EALJ,cAMI,eAAQ,KAAK,CAAC,GAAd,oBANJ,cAOI,eAAQ,KAAK,CAAC,GAAd,kBAPJ,cAQI,eAAQ,KAAK,CAAC,GAAd,qBARJ,GAFJ,GAjCJ,cA8CI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,UAAf,qCADJ,cAEI,MAAC,QAAD,EACI,EAAE,CAAC,SADP,CAEI,IAAI,CAAC,UAFT,CAGI,YAAY,CAAE7B,qBAAqB,CAAC+B,iBAHxC,CAII,QAAQ,CAAE,kBAACJ,CAAD,QACN1B,eAAc,gCAAMD,qBAAN,MAA6B+B,iBAAiB,CAAEJ,CAAC,CAACC,MAAF,CAASC,KAAzD,GADR,EAJd,wBAOI,eAAQ,KAAK,CAAC,EAAd,EAPJ,cAQI,eAAQ,KAAK,CAAC,GAAd,gBARJ,cASI,eAAQ,KAAK,CAAC,KAAd,qBATJ,cAUI,eAAQ,KAAK,CAAC,GAAd,iBAVJ,GAFJ,GA9CJ,cA6DI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,gBAAf,4BADJ,cAEI,MAAC,QAAD,EACI,EAAE,CAAC,gBADP,CAEI,IAAI,CAAC,gBAFT,CAGI,YAAY,CAAE7B,qBAAqB,CAACgC,aAHxC,CAII,QAAQ,CAAE,kBAACL,CAAD,QAAO1B,eAAc,gCAAMD,qBAAN,MAA6BgC,aAAa,CAAEL,CAAC,CAACC,MAAF,CAASC,KAArD,GAArB,EAJd,wBAKI,eAAQ,KAAK,CAAC,EAAd,EALJ,cAMI,eAAQ,KAAK,CAAC,GAAd,sBANJ,cAOI,eAAQ,KAAK,CAAC,GAAd,wBAPJ,cAQI,eAAQ,KAAK,CAAC,GAAd,sBARJ,cASI,eAAQ,KAAK,CAAC,GAAd,8BATJ,cAUI,eAAQ,KAAK,CAAC,GAAd,2BAVJ,cAWI,eAAQ,KAAK,CAAC,GAAd,+BAXJ,cAYI,eAAQ,KAAK,CAAC,GAAd,6BAZJ,cAaI,eAAQ,KAAK,CAAC,GAAd,qBAbJ,cAcI,eAAQ,KAAK,CAAC,GAAd,mBAdJ,cAeI,eAAQ,KAAK,CAAC,GAAd,wBAfJ,cAgBI,eAAQ,KAAK,CAAC,GAAd,+BAhBJ,cAiBI,eAAQ,KAAK,CAAC,GAAd,uBAjBJ,cAkBI,eAAQ,KAAK,CAAC,GAAd,mCAlBJ,cAmBI,eAAQ,KAAK,CAAC,GAAd,qBAnBJ,cAoBI,eAAQ,KAAK,CAAC,GAAd,uBApBJ,cAqBI,eAAQ,KAAK,CAAC,GAAd,wBArBJ,cAsBI,eAAQ,KAAK,CAAC,GAAd,qBAtBJ,GAFJ,GA7DJ,cAwFI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,aAAf,+BADJ,cAEI,KAAC,SAAD,EACI,EAAE,CAAC,iBADP,CAEI,IAAI,CAAC,iBAFT,CAGI,IAAI,CAAE,MAHV,CAII,YAAY,CAAE7B,qBAAqB,CAACiC,cAJxC,CAKI,QAAQ,CAAE,kBAACN,CAAD,QAAO1B,eAAc,gCAAMD,qBAAN,MAA6BiC,cAAc,CAAEN,CAAC,CAACC,MAAF,CAASC,KAAtD,GAArB,EALd,EAFJ,GAxFJ,GADJ,EADJ,CAuGH"},"metadata":{},"sourceType":"module"}