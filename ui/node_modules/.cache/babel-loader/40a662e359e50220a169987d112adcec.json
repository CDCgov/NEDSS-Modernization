{"ast":null,"code":"/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}","map":{"version":3,"names":["addPath","prev","key","typename","pathToArray","path","flattened","curr","push","reverse"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/jsutils/Path.mjs"],"sourcesContent":["/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,QAA5B,EAAsC;EAC3C,OAAO;IACLF,IADK;IAELC,GAFK;IAGLC;EAHK,CAAP;AAKD;AACD;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EAChC,MAAMC,SAAS,GAAG,EAAlB;EACA,IAAIC,IAAI,GAAGF,IAAX;;EAEA,OAAOE,IAAP,EAAa;IACXD,SAAS,CAACE,IAAV,CAAeD,IAAI,CAACL,GAApB;IACAK,IAAI,GAAGA,IAAI,CAACN,IAAZ;EACD;;EAED,OAAOK,SAAS,CAACG,OAAV,EAAP;AACD"},"metadata":{},"sourceType":"module"}