{"ast":null,"code":"// @ts-ignore\nimport isoParse from './util/isodate';\nimport { date as locale } from './locale';\nimport isAbsent from './util/isAbsent';\nimport Ref from './Reference';\nimport BaseSchema from './schema';\nlet invalidDate = new Date('');\n\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\n\nexport function create() {\n  return new DateSchema();\n}\nexport default class DateSchema extends BaseSchema {\n  constructor() {\n    super({\n      type: 'date'\n    });\n    this.withMutation(() => {\n      this.transform(function (value) {\n        if (this.isType(value)) return value;\n        value = isoParse(value); // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n\n        return !isNaN(value) ? new Date(value) : invalidDate;\n      });\n    });\n  }\n\n  _typeCheck(v) {\n    return isDate(v) && !isNaN(v.getTime());\n  }\n\n  prepareParam(ref, name) {\n    let param;\n\n    if (!Ref.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n\n    return param;\n  }\n\n  min(min) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locale.min;\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n\n      test(value) {\n        return isAbsent(value) || value >= this.resolve(limit);\n      }\n\n    });\n  }\n\n  max(max) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locale.max;\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n\n      test(value) {\n        return isAbsent(value) || value <= this.resolve(limit);\n      }\n\n    });\n  }\n\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate.prototype = DateSchema.prototype;\ncreate.INVALID_DATE = invalidDate;","map":{"version":3,"names":["isoParse","date","locale","isAbsent","Ref","BaseSchema","invalidDate","Date","isDate","obj","Object","prototype","toString","call","create","DateSchema","constructor","type","withMutation","transform","value","isType","isNaN","_typeCheck","v","getTime","prepareParam","ref","name","param","isRef","cast","TypeError","min","message","limit","test","exclusive","params","resolve","max","INVALID_DATE"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/yup/es/date.js"],"sourcesContent":["// @ts-ignore\nimport isoParse from './util/isodate';\nimport { date as locale } from './locale';\nimport isAbsent from './util/isAbsent';\nimport Ref from './Reference';\nimport BaseSchema from './schema';\nlet invalidDate = new Date('');\n\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\n\nexport function create() {\n  return new DateSchema();\n}\nexport default class DateSchema extends BaseSchema {\n  constructor() {\n    super({\n      type: 'date'\n    });\n    this.withMutation(() => {\n      this.transform(function (value) {\n        if (this.isType(value)) return value;\n        value = isoParse(value); // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n\n        return !isNaN(value) ? new Date(value) : invalidDate;\n      });\n    });\n  }\n\n  _typeCheck(v) {\n    return isDate(v) && !isNaN(v.getTime());\n  }\n\n  prepareParam(ref, name) {\n    let param;\n\n    if (!Ref.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n\n    return param;\n  }\n\n  min(min, message = locale.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n\n      test(value) {\n        return isAbsent(value) || value >= this.resolve(limit);\n      }\n\n    });\n  }\n\n  max(max, message = locale.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n\n      test(value) {\n        return isAbsent(value) || value <= this.resolve(limit);\n      }\n\n    });\n  }\n\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate.prototype = DateSchema.prototype;\ncreate.INVALID_DATE = invalidDate;"],"mappings":"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"},"metadata":{},"sourceType":"module"}