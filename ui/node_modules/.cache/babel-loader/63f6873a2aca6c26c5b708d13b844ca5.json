{"ast":null,"code":"let _Symbol$toStringTag;\n\n/* istanbul ignore file */\n\n/* tslint:disable */\n\n/* eslint-disable */\nexport class CancelError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'CancelError';\n  }\n\n  get isCancelled() {\n    return true;\n  }\n\n}\n_Symbol$toStringTag = Symbol.toStringTag;\nexport class CancelablePromise {\n  constructor(executor) {\n    this[_Symbol$toStringTag] = void 0;\n    this._isResolved = void 0;\n    this._isRejected = void 0;\n    this._isCancelled = void 0;\n    this._cancelHandlers = void 0;\n    this._promise = void 0;\n    this._resolve = void 0;\n    this._reject = void 0;\n    this._isResolved = false;\n    this._isRejected = false;\n    this._isCancelled = false;\n    this._cancelHandlers = [];\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n\n      const onResolve = value => {\n        var _this$_resolve;\n\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n          return;\n        }\n\n        this._isResolved = true;\n        (_this$_resolve = this._resolve) === null || _this$_resolve === void 0 ? void 0 : _this$_resolve.call(this, value);\n      };\n\n      const onReject = reason => {\n        var _this$_reject;\n\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n          return;\n        }\n\n        this._isRejected = true;\n        (_this$_reject = this._reject) === null || _this$_reject === void 0 ? void 0 : _this$_reject.call(this, reason);\n      };\n\n      const onCancel = cancelHandler => {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n          return;\n        }\n\n        this._cancelHandlers.push(cancelHandler);\n      };\n\n      Object.defineProperty(onCancel, 'isResolved', {\n        get: () => this._isResolved\n      });\n      Object.defineProperty(onCancel, 'isRejected', {\n        get: () => this._isRejected\n      });\n      Object.defineProperty(onCancel, 'isCancelled', {\n        get: () => this._isCancelled\n      });\n      return executor(onResolve, onReject, onCancel);\n    });\n  }\n\n  then(onFulfilled, onRejected) {\n    return this._promise.then(onFulfilled, onRejected);\n  }\n\n  catch(onRejected) {\n    return this._promise.catch(onRejected);\n  }\n\n  finally(onFinally) {\n    return this._promise.finally(onFinally);\n  }\n\n  cancel() {\n    var _this$_reject2;\n\n    if (this._isResolved || this._isRejected || this._isCancelled) {\n      return;\n    }\n\n    this._isCancelled = true;\n\n    if (this._cancelHandlers.length) {\n      try {\n        for (const cancelHandler of this._cancelHandlers) {\n          cancelHandler();\n        }\n      } catch (error) {\n        console.warn('Cancellation threw an error', error);\n        return;\n      }\n    }\n\n    this._cancelHandlers.length = 0;\n    (_this$_reject2 = this._reject) === null || _this$_reject2 === void 0 ? void 0 : _this$_reject2.call(this, new CancelError('Request aborted'));\n  }\n\n  get isCancelled() {\n    return this._isCancelled;\n  }\n\n}","map":{"version":3,"names":["CancelError","Error","constructor","message","name","isCancelled","Symbol","toStringTag","CancelablePromise","executor","_isResolved","_isRejected","_isCancelled","_cancelHandlers","_promise","_resolve","_reject","Promise","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","push","Object","defineProperty","get","then","onFulfilled","onRejected","catch","finally","onFinally","cancel","length","error","console","warn"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/generated/core/CancelablePromise.ts"],"sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    readonly [Symbol.toStringTag]!: string;\n\n    private _isResolved: boolean;\n    private _isRejected: boolean;\n    private _isCancelled: boolean;\n    private readonly _cancelHandlers: (() => void)[];\n    private readonly _promise: Promise<T>;\n    private _resolve?: (value: T | PromiseLike<T>) => void;\n    private _reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this._isResolved = false;\n        this._isRejected = false;\n        this._isCancelled = false;\n        this._cancelHandlers = [];\n        this._promise = new Promise<T>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isResolved = true;\n                this._resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isRejected = true;\n                this._reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this._isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this._isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this._isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this._promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this._promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n            return;\n        }\n        this._isCancelled = true;\n        if (this._cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this._cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this._cancelHandlers.length = 0;\n        this._reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this._isCancelled;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}