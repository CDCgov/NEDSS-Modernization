{"ast":null,"code":"import _slicedToArray from\"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Accordion,Button,Form,Grid}from'@trussworks/react-uswds';import{DatePickerInput}from'../FormInputs/DatePickerInput';import{Input}from'../FormInputs/Input';import{SelectInput}from'../FormInputs/SelectInput';import*as yup from'yup';import{Controller,useForm}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import{Gender,useFindPatientsByFilterLazyQuery}from'../../generated/graphql/schema';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SimpleSearch=function SimpleSearch(){var _useFindPatientsByFil=useFindPatientsByFilterLazyQuery(),_useFindPatientsByFil2=_slicedToArray(_useFindPatientsByFil,1),getFilteredData=_useFindPatientsByFil2[0];var schema=yup.object().shape({firstName:yup.string().required('First name is required.'),lastName:yup.string().required('Last name is required.')});var methods=useForm({resolver:yupResolver(schema)});var handleSubmit=methods.handleSubmit,control=methods.control,errors=methods.formState.errors,reset=methods.reset;var simpleSearchItems=[{title:'Simple Search',content:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{col:12,children:/*#__PURE__*/_jsx(Controller,{control:control,name:\"lastName\",render:function render(_ref){var _ref$field=_ref.field,onChange=_ref$field.onChange,value=_ref$field.value;return/*#__PURE__*/_jsx(Input,{onChange:onChange,type:\"text\",label:\"Last Name\",name:\"lastName\",required:true,defaultValue:value,htmlFor:\"lastName\",id:\"lastName\",error:(errors===null||errors===void 0?void 0:errors.lastName)&&'Last name is required.'});}})}),/*#__PURE__*/_jsx(Grid,{col:12,children:/*#__PURE__*/_jsx(Controller,{control:control,name:\"firstName\",render:function render(_ref2){var _ref2$field=_ref2.field,onChange=_ref2$field.onChange,value=_ref2$field.value;return/*#__PURE__*/_jsx(Input,{onChange:onChange,defaultValue:value,type:\"text\",label:\"First Name\",name:\"firstName\",htmlFor:\"firstName\",id:\"firstName\",required:true,error:(errors===null||errors===void 0?void 0:errors.firstName)&&'First name is required.'});}})}),/*#__PURE__*/_jsx(Grid,{col:12,children:/*#__PURE__*/_jsx(Controller,{control:control,name:\"gender\",render:function render(_ref3){var onChange=_ref3.field.onChange;return/*#__PURE__*/_jsx(SelectInput,{onChange:onChange,name:\"gender\",htmlFor:'gender',label:\"Gender\",options:[{name:'Male',value:Gender.M},{name:'Female',value:Gender.F},{name:'Other',value:Gender.U}]});}})}),/*#__PURE__*/_jsx(Grid,{col:12,children:/*#__PURE__*/_jsx(Controller,{control:control,name:\"dob\",render:function render(_ref4){var onChange=_ref4.field.onChange;return/*#__PURE__*/_jsx(DatePickerInput,{onChange:onChange,name:\"dob\",htmlFor:'dob',label:\"Date Of Birth\"});}})})]}),expanded:true,id:'1',headingLevel:'h4',className:'accordian-item'}];var onSubmit=function onSubmit(body){var rowData={firstName:body.firstName,lastName:body.lastName};body.city&&(rowData.city=body.city);body.zip&&(rowData.zip=body.zip);body.patientId&&(rowData.id=body.patientId);body.dob&&(rowData.DateOfBirth=body.dob);body.gender!=='- Select -'&&(rowData.gender=body.gender);body.state!=='- Select -'&&(rowData.state=body.state);var search=\"?firstName=\".concat(rowData.firstName,\"&lastName=\").concat(rowData.lastName);rowData.city&&(search=\"\".concat(search,\"&city=\").concat(rowData.city));rowData.zip&&(search=\"\".concat(search,\"&zip=\").concat(rowData.zip));rowData.id&&(search=\"\".concat(search,\"&id=\").concat(rowData.id));rowData.DateOfBirth&&(search=\"\".concat(search,\"&DateOfBirth=\").concat(rowData.DateOfBirth));getFilteredData({variables:{filter:rowData}});};return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),className:\"width-full maxw-full\",children:[/*#__PURE__*/_jsx(Accordion,{items:simpleSearchItems,multiselectable:true}),/*#__PURE__*/_jsx(Grid,{col:12,className:\"margin-top-5 padding-x-3\",children:/*#__PURE__*/_jsx(Button,{className:\"width-full\",type:'submit',children:\"Search\"})}),/*#__PURE__*/_jsx(Grid,{col:12,className:\"padding-x-3\",children:/*#__PURE__*/_jsx(Button,{className:\"width-full\",type:'button',onClick:function onClick(){return reset({lastName:'',firstName:'',city:'',state:'',zip:'',patientId:''});},outline:true,children:\"Clear\"})})]});};","map":{"version":3,"names":["Accordion","Button","Form","Grid","DatePickerInput","Input","SelectInput","yup","Controller","useForm","yupResolver","Gender","useFindPatientsByFilterLazyQuery","SimpleSearch","getFilteredData","schema","object","shape","firstName","string","required","lastName","methods","resolver","handleSubmit","control","errors","formState","reset","simpleSearchItems","title","content","field","onChange","value","name","M","F","U","expanded","id","headingLevel","className","onSubmit","body","rowData","city","zip","patientId","dob","DateOfBirth","gender","state","search","variables","filter"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/SimpleSearch/index.tsx"],"sourcesContent":["import { Accordion, Button, Form, Grid } from '@trussworks/react-uswds';\nimport { DatePickerInput } from '../FormInputs/DatePickerInput';\nimport { Input } from '../FormInputs/Input';\nimport { SelectInput } from '../FormInputs/SelectInput';\nimport * as yup from 'yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Gender, PersonFilter, useFindPatientsByFilterLazyQuery } from '../../generated/graphql/schema';\nimport { AccordionItemProps } from '@trussworks/react-uswds/lib/components/Accordion/Accordion';\n\nexport const SimpleSearch = () => {\n    const [getFilteredData] = useFindPatientsByFilterLazyQuery();\n    const schema = yup.object().shape({\n        firstName: yup.string().required('First name is required.'),\n        lastName: yup.string().required('Last name is required.')\n    });\n\n    const methods = useForm({\n        resolver: yupResolver(schema)\n    });\n\n    const {\n        handleSubmit,\n        control,\n        formState: { errors },\n        reset\n    } = methods;\n\n    const simpleSearchItems: AccordionItemProps[] = [\n        {\n            title: 'Simple Search',\n            content: (\n                <>\n                    <Grid col={12}>\n                        <Controller\n                            control={control}\n                            name=\"lastName\"\n                            render={({ field: { onChange, value } }) => (\n                                <Input\n                                    onChange={onChange}\n                                    type=\"text\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    required\n                                    defaultValue={value}\n                                    htmlFor=\"lastName\"\n                                    id=\"lastName\"\n                                    error={errors?.lastName && 'Last name is required.'}\n                                />\n                            )}\n                        />\n                    </Grid>\n                    <Grid col={12}>\n                        <Controller\n                            control={control}\n                            name=\"firstName\"\n                            render={({ field: { onChange, value } }) => (\n                                <Input\n                                    onChange={onChange}\n                                    defaultValue={value}\n                                    type=\"text\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    htmlFor=\"firstName\"\n                                    id=\"firstName\"\n                                    required\n                                    error={errors?.firstName && 'First name is required.'}\n                                />\n                            )}\n                        />\n                    </Grid>\n                    <Grid col={12}>\n                        <Controller\n                            control={control}\n                            name=\"gender\"\n                            render={({ field: { onChange } }) => (\n                                <SelectInput\n                                    onChange={onChange}\n                                    name=\"gender\"\n                                    htmlFor={'gender'}\n                                    label=\"Gender\"\n                                    options={[\n                                        { name: 'Male', value: Gender.M },\n                                        { name: 'Female', value: Gender.F },\n                                        { name: 'Other', value: Gender.U }\n                                    ]}\n                                />\n                            )}\n                        />\n                    </Grid>\n                    <Grid col={12}>\n                        <Controller\n                            control={control}\n                            name=\"dob\"\n                            render={({ field: { onChange } }) => (\n                                <DatePickerInput onChange={onChange} name=\"dob\" htmlFor={'dob'} label=\"Date Of Birth\" />\n                            )}\n                        />\n                    </Grid>\n                </>\n            ),\n            expanded: true,\n            id: '1',\n            headingLevel: 'h4',\n            className: 'accordian-item'\n        }\n    ];\n\n    const onSubmit: any = (body: any) => {\n        const rowData: PersonFilter = {\n            firstName: body.firstName,\n            lastName: body.lastName\n        };\n        body.city && (rowData.city = body.city);\n        body.zip && (rowData.zip = body.zip);\n        body.patientId && (rowData.id = body.patientId);\n        body.dob && (rowData.DateOfBirth = body.dob);\n        body.gender !== '- Select -' && (rowData.gender = body.gender);\n        body.state !== '- Select -' && (rowData.state = body.state);\n\n        let search = `?firstName=${rowData.firstName}&lastName=${rowData.lastName}`;\n        rowData.city && (search = `${search}&city=${rowData.city}`);\n        rowData.zip && (search = `${search}&zip=${rowData.zip}`);\n        rowData.id && (search = `${search}&id=${rowData.id}`);\n        rowData.DateOfBirth && (search = `${search}&DateOfBirth=${rowData.DateOfBirth}`);\n\n        getFilteredData({\n            variables: {\n                filter: rowData\n            }\n        });\n    };\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"width-full maxw-full\">\n            <Accordion items={simpleSearchItems} multiselectable={true} />\n            <Grid col={12} className=\"margin-top-5 padding-x-3\">\n                <Button className=\"width-full\" type={'submit'}>\n                    Search\n                </Button>\n            </Grid>\n            <Grid col={12} className=\"padding-x-3\">\n                <Button\n                    className=\"width-full\"\n                    type={'button'}\n                    onClick={() =>\n                        reset({\n                            lastName: '',\n                            firstName: '',\n                            city: '',\n                            state: '',\n                            zip: '',\n                            patientId: ''\n                        })\n                    }\n                    outline>\n                    Clear\n                </Button>\n            </Grid>\n        </Form>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}