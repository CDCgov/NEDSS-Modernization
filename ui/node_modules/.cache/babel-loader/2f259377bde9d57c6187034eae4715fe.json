{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/FormInputs/SelectInput.tsx\";\nimport { Dropdown, Label } from '@trussworks/react-uswds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SelectInput = _ref => {\n  let {\n    name,\n    htmlFor,\n    label,\n    id,\n    options,\n    onChange,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: htmlFor || '',\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"-Select-\",\n      onChange: onChange,\n      ...props,\n      id: id || '',\n      name: name || '',\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"- Select -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), options === null || options === void 0 ? void 0 : options.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = SelectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectInput\");","map":{"version":3,"names":["Dropdown","Label","SelectInput","name","htmlFor","label","id","options","onChange","props","map","item","index","value"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/FormInputs/SelectInput.tsx"],"sourcesContent":["import { Dropdown, Label } from '@trussworks/react-uswds';\n\ntype SelectProps = {\n    name?: string;\n    htmlFor?: string;\n    label?: string;\n    id?: string;\n    options: { name: string; value: string }[];\n    onChange?: any;\n};\n\nexport const SelectInput = ({ name, htmlFor, label, id, options, onChange, ...props }: SelectProps) => {\n    return (\n        <>\n            <Label htmlFor={htmlFor || ''}>{label}</Label>\n            <Dropdown placeholder=\"-Select-\" onChange={onChange} {...props} id={id || ''} name={name || ''}>\n                <>\n                    <option>- Select -</option>\n                    {options?.map((item, index) => (\n                        <option key={index} value={item.value}>\n                            {item.name}\n                        </option>\n                    ))}\n                </>\n            </Dropdown>\n        </>\n    );\n};\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,yBAAhC;;;AAWA,OAAO,MAAMC,WAAW,GAAG,QAA4E;EAAA,IAA3E;IAAEC,IAAF;IAAQC,OAAR;IAAiBC,KAAjB;IAAwBC,EAAxB;IAA4BC,OAA5B;IAAqCC,QAArC;IAA+C,GAAGC;EAAlD,CAA2E;EACnG,oBACI;IAAA,wBACI,QAAC,KAAD;MAAO,OAAO,EAAEL,OAAO,IAAI,EAA3B;MAAA,UAAgCC;IAAhC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,WAAW,EAAC,UAAtB;MAAiC,QAAQ,EAAEG,QAA3C;MAAA,GAAyDC,KAAzD;MAAgE,EAAE,EAAEH,EAAE,IAAI,EAA1E;MAA8E,IAAI,EAAEH,IAAI,IAAI,EAA5F;MAAA,uBACI;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKI,OAFL,aAEKA,OAFL,uBAEKA,OAAO,CAAEG,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACV;UAAoB,KAAK,EAAED,IAAI,CAACE,KAAhC;UAAA,UACKF,IAAI,CAACR;QADV,GAAaS,KAAb;UAAA;UAAA;UAAA;QAAA,QADH,CAFL;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAeH,CAhBM;KAAMV,W"},"metadata":{},"sourceType":"module"}