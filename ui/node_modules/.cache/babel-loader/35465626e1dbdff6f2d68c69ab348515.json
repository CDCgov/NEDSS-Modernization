{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function (_a) {\n  var client = _a.client,\n      children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n\n    __DEV__ ? invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.') : invariant(context.client, 26);\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,kCAA1B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;AAOA,OAAO,IAAMC,cAAc,GAAuC,UAACC,EAAD,EAGjE;MAFCC,MAAM;MACNC,QAAQ;EAER,IAAMC,aAAa,GAAGL,gBAAgB,EAAtC;EACA,OACED,oBAACM,aAAa,CAACC,QAAf,EAAuB,IAAvB,EACG,UAACC,OAAD,EAAkB;IAAjB;MAAAA;IAAiB;;IACjB,IAAIJ,MAAM,IAAII,OAAO,CAACJ,MAAR,KAAmBA,MAAjC,EAAyC;MACvCI,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,EAA2B;QAAEJ,MAAM;MAAR,CAA3B,CAAV;IACD;;IAEDO,UACEZ,SAAQ,QACR,OADQ,EACR,2DACE,qDAFM,CADV,GAIEA,6BAJF;IAMA,OACEC,oBAACM,aAAa,CAACM,QAAf,EAAuB;MAACC,KAAK,EAAEL;IAAR,CAAvB,EACGH,QADH,CADF;EAKD,CAjBH,CADF;AAqBD,CA1BM","names":["invariant","React","getApolloContext","ApolloProvider","_a","client","children","ApolloContext","Consumer","context","Object","assign","__DEV__","Provider","value"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@apollo/src/react/context/ApolloProvider.tsx"],"sourcesContent":["import { invariant } from '../../utilities/globals';\n\nimport * as React from 'react';\n\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from './ApolloContext';\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nexport const ApolloProvider: React.FC<ApolloProviderProps<any>> = ({\n  client,\n  children\n}) => {\n  const ApolloContext = getApolloContext();\n  return (\n    <ApolloContext.Consumer>\n      {(context: any = {}) => {\n        if (client && context.client !== client) {\n          context = Object.assign({}, context, { client });\n        }\n\n        invariant(\n          context.client,\n          'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.'\n        );\n\n        return (\n          <ApolloContext.Provider value={context}>\n            {children}\n          </ApolloContext.Provider>\n        );\n      }}\n    </ApolloContext.Consumer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}