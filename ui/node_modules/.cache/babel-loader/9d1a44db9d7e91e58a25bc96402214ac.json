{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/FormInputs/SelectControl.tsx\";\nimport { Controller } from 'react-hook-form';\nimport { SelectInput } from './SelectInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectControl = _ref => {\n  let {\n    control,\n    name,\n    onChangeMethod,\n    options,\n    label\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    control: control,\n    name: name,\n    render: _ref2 => {\n      let {\n        field: {\n          onChange\n        }\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(SelectInput, {\n        onChange: e => {\n          onChangeMethod === null || onChangeMethod === void 0 ? void 0 : onChangeMethod(e.target.value);\n          onChange();\n        },\n        label: label,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = SelectControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectControl\");","map":{"version":3,"names":["Controller","SelectInput","SelectControl","control","name","onChangeMethod","options","label","field","onChange","e","target","value"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/FormInputs/SelectControl.tsx"],"sourcesContent":["import { Control, Controller, FieldValues } from 'react-hook-form';\nimport { SelectInput } from './SelectInput';\n\ntype EventTypesProps = {\n    control: Control<FieldValues, any>;\n    name: string;\n    onChangeMethod?: (event: any) => void;\n    options: any;\n    label?: string;\n};\n\nexport const SelectControl = ({ control, name, onChangeMethod, options, label }: EventTypesProps) => {\n    return (\n        <Controller\n            control={control}\n            name={name}\n            render={({ field: { onChange } }) => (\n                <SelectInput\n                    onChange={(e: any) => {\n                        onChangeMethod?.(e.target.value);\n                        onChange();\n                    }}\n                    label={label}\n                    options={options}\n                />\n            )}\n        />\n    );\n};\n"],"mappings":";AAAA,SAAkBA,UAAlB,QAAiD,iBAAjD;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAUA,OAAO,MAAMC,aAAa,GAAG,QAAwE;EAAA,IAAvE;IAAEC,OAAF;IAAWC,IAAX;IAAiBC,cAAjB;IAAiCC,OAAjC;IAA0CC;EAA1C,CAAuE;EACjG,oBACI,QAAC,UAAD;IACI,OAAO,EAAEJ,OADb;IAEI,IAAI,EAAEC,IAFV;IAGI,MAAM,EAAE;MAAA,IAAC;QAAEI,KAAK,EAAE;UAAEC;QAAF;MAAT,CAAD;MAAA,oBACJ,QAAC,WAAD;QACI,QAAQ,EAAGC,CAAD,IAAY;UAClBL,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAGK,CAAC,CAACC,MAAF,CAASC,KAAZ,CAAd;UACAH,QAAQ;QACX,CAJL;QAKI,KAAK,EAAEF,KALX;QAMI,OAAO,EAAED;MANb;QAAA;QAAA;QAAA;MAAA,QADI;IAAA;EAHZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAjBM;KAAMJ,a"},"metadata":{},"sourceType":"module"}