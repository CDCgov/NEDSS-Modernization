{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\n\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName = definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new GraphQLError(`The ${defName} definition is not executable.`, {\n            nodes: definition\n          }));\n        }\n      }\n\n      return false;\n    }\n\n  };\n}","map":{"version":3,"names":["GraphQLError","Kind","isExecutableDefinitionNode","ExecutableDefinitionsRule","context","Document","node","definition","definitions","defName","kind","SCHEMA_DEFINITION","SCHEMA_EXTENSION","name","value","reportError","nodes"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(`The ${defName} definition is not executable.`, {\n              nodes: definition,\n            }),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,yBAAT,CAAmCC,OAAnC,EAA4C;EACjD,OAAO;IACLC,QAAQ,CAACC,IAAD,EAAO;MACb,KAAK,MAAMC,UAAX,IAAyBD,IAAI,CAACE,WAA9B,EAA2C;QACzC,IAAI,CAACN,0BAA0B,CAACK,UAAD,CAA/B,EAA6C;UAC3C,MAAME,OAAO,GACXF,UAAU,CAACG,IAAX,KAAoBT,IAAI,CAACU,iBAAzB,IACAJ,UAAU,CAACG,IAAX,KAAoBT,IAAI,CAACW,gBADzB,GAEI,QAFJ,GAGI,MAAML,UAAU,CAACM,IAAX,CAAgBC,KAAtB,GAA8B,GAJpC;UAKAV,OAAO,CAACW,WAAR,CACE,IAAIf,YAAJ,CAAkB,OAAMS,OAAQ,gCAAhC,EAAiE;YAC/DO,KAAK,EAAET;UADwD,CAAjE,CADF;QAKD;MACF;;MAED,OAAO,KAAP;IACD;;EAlBI,CAAP;AAoBD"},"metadata":{},"sourceType":"module"}