{"ast":null,"code":"import { GraphQLError } from '../error/GraphQLError.mjs';\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\n\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError('Schema does not define the required query root type.', {\n        nodes: operation\n      });\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError('Can only have query, mutation and subscription operations.', {\n    nodes: operation\n  });\n}","map":{"version":3,"names":["GraphQLError","getOperationRootType","schema","operation","queryType","getQueryType","nodes","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/utilities/getOperationRootType.mjs"],"sourcesContent":["import { GraphQLError } from '../error/GraphQLError.mjs';\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation,\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation,\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;EACtD,IAAIA,SAAS,CAACA,SAAV,KAAwB,OAA5B,EAAqC;IACnC,MAAMC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAlB;;IAEA,IAAI,CAACD,SAAL,EAAgB;MACd,MAAM,IAAIJ,YAAJ,CACJ,sDADI,EAEJ;QACEM,KAAK,EAAEH;MADT,CAFI,CAAN;IAMD;;IAED,OAAOC,SAAP;EACD;;EAED,IAAID,SAAS,CAACA,SAAV,KAAwB,UAA5B,EAAwC;IACtC,MAAMI,YAAY,GAAGL,MAAM,CAACM,eAAP,EAArB;;IAEA,IAAI,CAACD,YAAL,EAAmB;MACjB,MAAM,IAAIP,YAAJ,CAAiB,yCAAjB,EAA4D;QAChEM,KAAK,EAAEH;MADyD,CAA5D,CAAN;IAGD;;IAED,OAAOI,YAAP;EACD;;EAED,IAAIJ,SAAS,CAACA,SAAV,KAAwB,cAA5B,EAA4C;IAC1C,MAAMM,gBAAgB,GAAGP,MAAM,CAACQ,mBAAP,EAAzB;;IAEA,IAAI,CAACD,gBAAL,EAAuB;MACrB,MAAM,IAAIT,YAAJ,CAAiB,6CAAjB,EAAgE;QACpEM,KAAK,EAAEH;MAD6D,CAAhE,CAAN;IAGD;;IAED,OAAOM,gBAAP;EACD;;EAED,MAAM,IAAIT,YAAJ,CACJ,4DADI,EAEJ;IACEM,KAAK,EAAEH;EADT,CAFI,CAAN;AAMD"},"metadata":{},"sourceType":"module"}