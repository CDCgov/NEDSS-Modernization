{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/SimpleSearch/IdForm.tsx\";\nimport { Grid } from '@trussworks/react-uswds';\nimport { Input } from '../FormInputs/Input';\nimport { SelectInput } from '../FormInputs/SelectInput';\nimport { Controller } from 'react-hook-form';\nimport { IdentificationType } from '../../generated/graphql/schema';\nimport { formatInterfaceString } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const IDForm = _ref => {\n  let {\n    control\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      col: 12,\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"identificationType\",\n        render: _ref2 => {\n          let {\n            field: {\n              onChange\n            }\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(SelectInput, {\n            options: Object.values(IdentificationType).map(type => {\n              return {\n                name: formatInterfaceString(type),\n                value: type\n              };\n            }),\n            onChange: onChange,\n            htmlFor: 'identificationType',\n            label: \"ID type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      col: 12,\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"identificationNumber\",\n        render: _ref3 => {\n          let {\n            field: {\n              onChange,\n              value\n            }\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChange,\n            defaultValue: value,\n            type: \"text\",\n            label: \"ID number\",\n            htmlFor: \"identificationNumber\",\n            id: \"identificationNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = IDForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"IDForm\");","map":{"version":3,"names":["Grid","Input","SelectInput","Controller","IdentificationType","formatInterfaceString","IDForm","control","field","onChange","Object","values","map","type","name","value"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/SimpleSearch/IdForm.tsx"],"sourcesContent":["import { Grid } from '@trussworks/react-uswds';\nimport { Input } from '../FormInputs/Input';\nimport { SelectInput } from '../FormInputs/SelectInput';\nimport { Controller } from 'react-hook-form';\nimport { IdentificationType } from '../../generated/graphql/schema';\nimport { formatInterfaceString } from '../../utils';\n\nexport const IDForm = ({ control }: any) => {\n    return (\n        <>\n            <Grid col={12}>\n                <Controller\n                    control={control}\n                    name=\"identificationType\"\n                    render={({ field: { onChange } }) => (\n                        <SelectInput\n                            options={Object.values(IdentificationType).map((type) => {\n                                return {\n                                    name: formatInterfaceString(type),\n                                    value: type\n                                };\n                            })}\n                            onChange={onChange}\n                            htmlFor={'identificationType'}\n                            label=\"ID type\"\n                        />\n                    )}\n                />\n            </Grid>\n            <Grid col={12}>\n                <Controller\n                    control={control}\n                    name=\"identificationNumber\"\n                    render={({ field: { onChange, value } }) => (\n                        <Input\n                            onChange={onChange}\n                            defaultValue={value}\n                            type=\"text\"\n                            label=\"ID number\"\n                            htmlFor=\"identificationNumber\"\n                            id=\"identificationNumber\"\n                        />\n                    )}\n                />\n            </Grid>\n        </>\n    );\n};\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,yBAArB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,qBAAT,QAAsC,aAAtC;;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAsB;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACxC,oBACI;IAAA,wBACI,QAAC,IAAD;MAAM,GAAG,EAAE,EAAX;MAAA,uBACI,QAAC,UAAD;QACI,OAAO,EAAEA,OADb;QAEI,IAAI,EAAC,oBAFT;QAGI,MAAM,EAAE;UAAA,IAAC;YAAEC,KAAK,EAAE;cAAEC;YAAF;UAAT,CAAD;UAAA,oBACJ,QAAC,WAAD;YACI,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcP,kBAAd,EAAkCQ,GAAlC,CAAuCC,IAAD,IAAU;cACrD,OAAO;gBACHC,IAAI,EAAET,qBAAqB,CAACQ,IAAD,CADxB;gBAEHE,KAAK,EAAEF;cAFJ,CAAP;YAIH,CALQ,CADb;YAOI,QAAQ,EAAEJ,QAPd;YAQI,OAAO,EAAE,oBARb;YASI,KAAK,EAAC;UATV;YAAA;YAAA;YAAA;UAAA,QADI;QAAA;MAHZ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAoBI,QAAC,IAAD;MAAM,GAAG,EAAE,EAAX;MAAA,uBACI,QAAC,UAAD;QACI,OAAO,EAAEF,OADb;QAEI,IAAI,EAAC,sBAFT;QAGI,MAAM,EAAE;UAAA,IAAC;YAAEC,KAAK,EAAE;cAAEC,QAAF;cAAYM;YAAZ;UAAT,CAAD;UAAA,oBACJ,QAAC,KAAD;YACI,QAAQ,EAAEN,QADd;YAEI,YAAY,EAAEM,KAFlB;YAGI,IAAI,EAAC,MAHT;YAII,KAAK,EAAC,WAJV;YAKI,OAAO,EAAC,sBALZ;YAMI,EAAE,EAAC;UANP;YAAA;YAAA;YAAA;UAAA,QADI;QAAA;MAHZ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QApBJ;EAAA,gBADJ;AAuCH,CAxCM;KAAMT,M"},"metadata":{},"sourceType":"module"}