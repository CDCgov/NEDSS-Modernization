{"ast":null,"code":"import _classCallCheck from \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport has from 'lodash/has';\nimport isSchema from './util/isSchema';\n\nvar Condition = /*#__PURE__*/function () {\n  function Condition(refs, options) {\n    _classCallCheck(this, Condition);\n\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n\n    if (typeof options === 'function') {\n      this.fn = options;\n      return;\n    }\n\n    if (!has(options, 'is')) throw new TypeError('`is:` is required for `when()` conditions');\n    if (!options.then && !options.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    var is = options.is,\n        then = options.then,\n        otherwise = options.otherwise;\n    var check = typeof is === 'function' ? is : function () {\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      return values.every(function (value) {\n        return value === is;\n      });\n    };\n\n    this.fn = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var options = args.pop();\n      var schema = args.pop();\n      var branch = check.apply(void 0, args) ? then : otherwise;\n      if (!branch) return undefined;\n      if (typeof branch === 'function') return branch(schema);\n      return schema.concat(branch.resolve(options));\n    };\n  }\n\n  _createClass(Condition, [{\n    key: \"resolve\",\n    value: function resolve(base, options) {\n      var values = this.refs.map(function (ref) {\n        return ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n      });\n      var schema = this.fn.apply(base, values.concat(base, options));\n      if (schema === undefined || schema === base) return base;\n      if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n      return schema.resolve(options);\n    }\n  }]);\n\n  return Condition;\n}();\n\nexport default Condition;","map":{"version":3,"names":["has","isSchema","Condition","refs","options","fn","TypeError","then","otherwise","is","check","values","every","value","args","pop","schema","branch","undefined","concat","resolve","base","map","ref","getValue","parent","context","apply"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/yup/es/Condition.js"],"sourcesContent":["import has from 'lodash/has';\nimport isSchema from './util/isSchema';\n\nclass Condition {\n  constructor(refs, options) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n\n    if (typeof options === 'function') {\n      this.fn = options;\n      return;\n    }\n\n    if (!has(options, 'is')) throw new TypeError('`is:` is required for `when()` conditions');\n    if (!options.then && !options.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = options;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n\n    this.fn = function (...args) {\n      let options = args.pop();\n      let schema = args.pop();\n      let branch = check(...args) ? then : otherwise;\n      if (!branch) return undefined;\n      if (typeof branch === 'function') return branch(schema);\n      return schema.concat(branch.resolve(options));\n    };\n  }\n\n  resolve(base, options) {\n    let values = this.refs.map(ref => ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn.apply(base, values.concat(base, options));\n    if (schema === undefined || schema === base) return base;\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n\n}\n\nexport default Condition;"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;IAEMC,S;EACJ,mBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;IAAA;;IACzB,KAAKC,EAAL,GAAU,KAAK,CAAf;IACA,KAAKF,IAAL,GAAYA,IAAZ;IACA,KAAKA,IAAL,GAAYA,IAAZ;;IAEA,IAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC;MACjC,KAAKC,EAAL,GAAUD,OAAV;MACA;IACD;;IAED,IAAI,CAACJ,GAAG,CAACI,OAAD,EAAU,IAAV,CAAR,EAAyB,MAAM,IAAIE,SAAJ,CAAc,2CAAd,CAAN;IACzB,IAAI,CAACF,OAAO,CAACG,IAAT,IAAiB,CAACH,OAAO,CAACI,SAA9B,EAAyC,MAAM,IAAIF,SAAJ,CAAc,oEAAd,CAAN;IACzC,IACEG,EADF,GAIIL,OAJJ,CACEK,EADF;IAAA,IAEEF,IAFF,GAIIH,OAJJ,CAEEG,IAFF;IAAA,IAGEC,SAHF,GAIIJ,OAJJ,CAGEI,SAHF;IAKA,IAAIE,KAAK,GAAG,OAAOD,EAAP,KAAc,UAAd,GAA2BA,EAA3B,GAAgC;MAAA,kCAAIE,MAAJ;QAAIA,MAAJ;MAAA;;MAAA,OAAeA,MAAM,CAACC,KAAP,CAAa,UAAAC,KAAK;QAAA,OAAIA,KAAK,KAAKJ,EAAd;MAAA,CAAlB,CAAf;IAAA,CAA5C;;IAEA,KAAKJ,EAAL,GAAU,YAAmB;MAAA,mCAANS,IAAM;QAANA,IAAM;MAAA;;MAC3B,IAAIV,OAAO,GAAGU,IAAI,CAACC,GAAL,EAAd;MACA,IAAIC,MAAM,GAAGF,IAAI,CAACC,GAAL,EAAb;MACA,IAAIE,MAAM,GAAGP,KAAK,MAAL,SAASI,IAAT,IAAiBP,IAAjB,GAAwBC,SAArC;MACA,IAAI,CAACS,MAAL,EAAa,OAAOC,SAAP;MACb,IAAI,OAAOD,MAAP,KAAkB,UAAtB,EAAkC,OAAOA,MAAM,CAACD,MAAD,CAAb;MAClC,OAAOA,MAAM,CAACG,MAAP,CAAcF,MAAM,CAACG,OAAP,CAAehB,OAAf,CAAd,CAAP;IACD,CAPD;EAQD;;;;WAED,iBAAQiB,IAAR,EAAcjB,OAAd,EAAuB;MACrB,IAAIO,MAAM,GAAG,KAAKR,IAAL,CAAUmB,GAAV,CAAc,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,QAAJ,CAAapB,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACS,KAAhD,EAAuDT,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACqB,MAA1F,EAAkGrB,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACsB,OAArI,CAAJ;MAAA,CAAjB,CAAb;MACA,IAAIV,MAAM,GAAG,KAAKX,EAAL,CAAQsB,KAAR,CAAcN,IAAd,EAAoBV,MAAM,CAACQ,MAAP,CAAcE,IAAd,EAAoBjB,OAApB,CAApB,CAAb;MACA,IAAIY,MAAM,KAAKE,SAAX,IAAwBF,MAAM,KAAKK,IAAvC,EAA6C,OAAOA,IAAP;MAC7C,IAAI,CAACpB,QAAQ,CAACe,MAAD,CAAb,EAAuB,MAAM,IAAIV,SAAJ,CAAc,wCAAd,CAAN;MACvB,OAAOU,MAAM,CAACI,OAAP,CAAehB,OAAf,CAAP;IACD;;;;;;AAIH,eAAeF,SAAf"},"metadata":{},"sourceType":"module"}