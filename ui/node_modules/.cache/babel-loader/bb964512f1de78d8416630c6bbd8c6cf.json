{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/EventSearch/EventType.tsx\";\nimport { Controller } from 'react-hook-form';\nimport { EventType } from '../../generated/graphql/schema';\nimport { SelectInput } from '../FormInputs/SelectInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventTypes = _ref => {\n  let {\n    control,\n    name,\n    onChangeMethod\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    control: control,\n    name: name,\n    render: _ref2 => {\n      let {\n        field: {\n          onChange\n        }\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(SelectInput, {\n        onChange: e => {\n          onChangeMethod(e.target.value);\n          onChange();\n        },\n        label: \"Event Type:\",\n        options: [{\n          name: 'Investigation',\n          value: EventType.Investigation\n        }, {\n          name: 'Laboratory Report',\n          value: EventType.LaboratoryReport\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = EventTypes;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventTypes\");","map":{"version":3,"names":["Controller","EventType","SelectInput","EventTypes","control","name","onChangeMethod","field","onChange","e","target","value","Investigation","LaboratoryReport"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/EventSearch/EventType.tsx"],"sourcesContent":["import { Control, Controller, FieldValues } from 'react-hook-form';\nimport { EventType } from '../../generated/graphql/schema';\nimport { SelectInput } from '../FormInputs/SelectInput';\n\ntype EventTypesProps = {\n    control: Control<FieldValues, any>;\n    name: string;\n    onChangeMethod: (event: any) => void;\n};\n\nexport const EventTypes = ({ control, name, onChangeMethod }: EventTypesProps) => {\n    return (\n        <Controller\n            control={control}\n            name={name}\n            render={({ field: { onChange } }) => (\n                <SelectInput\n                    onChange={(e: any) => {\n                        onChangeMethod(e.target.value);\n                        onChange();\n                    }}\n                    label=\"Event Type:\"\n                    options={[\n                        { name: 'Investigation', value: EventType.Investigation },\n                        { name: 'Laboratory Report', value: EventType.LaboratoryReport }\n                    ]}\n                />\n            )}\n        />\n    );\n};\n"],"mappings":";AAAA,SAAkBA,UAAlB,QAAiD,iBAAjD;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAQA,OAAO,MAAMC,UAAU,GAAG,QAAwD;EAAA,IAAvD;IAAEC,OAAF;IAAWC,IAAX;IAAiBC;EAAjB,CAAuD;EAC9E,oBACI,QAAC,UAAD;IACI,OAAO,EAAEF,OADb;IAEI,IAAI,EAAEC,IAFV;IAGI,MAAM,EAAE;MAAA,IAAC;QAAEE,KAAK,EAAE;UAAEC;QAAF;MAAT,CAAD;MAAA,oBACJ,QAAC,WAAD;QACI,QAAQ,EAAGC,CAAD,IAAY;UAClBH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;UACAH,QAAQ;QACX,CAJL;QAKI,KAAK,EAAC,aALV;QAMI,OAAO,EAAE,CACL;UAAEH,IAAI,EAAE,eAAR;UAAyBM,KAAK,EAAEV,SAAS,CAACW;QAA1C,CADK,EAEL;UAAEP,IAAI,EAAE,mBAAR;UAA6BM,KAAK,EAAEV,SAAS,CAACY;QAA9C,CAFK;MANb;QAAA;QAAA;QAAA;MAAA,QADI;IAAA;EAHZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CApBM;KAAMV,U"},"metadata":{},"sourceType":"module"}