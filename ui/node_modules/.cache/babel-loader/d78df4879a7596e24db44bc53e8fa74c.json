{"ast":null,"code":"var toString = Object.prototype.toString;\nexport function cloneDeep(value) {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        seen = seen || new Map();\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n\n    case \"[object Object]\":\n      {\n        seen = seen || new Map();\n        if (seen.has(val)) return seen.get(val);\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n\n    default:\n      return val;\n  }\n}","map":{"version":3,"mappings":"AAAQ,YAAQ,GAAKA,MAAM,CAACC,SAAP,CAAgBC,QAA7B;AAKR,OAAM,SAAUC,SAAV,CAAuBC,KAAvB,EAA+B;EACnC,OAAOC,eAAe,CAACD,KAAD,CAAtB;AACD;;AAED,SAASC,eAAT,CAA4BC,GAA5B,EAAoCC,IAApC,EAAwD;EACtD,QAAQL,QAAQ,CAACM,IAAT,CAAcF,GAAd,CAAR;IACA,KAAK,gBAAL;MAAuB;QACrBC,IAAI,GAAGA,IAAI,IAAI,IAAIE,GAAJ,EAAf;QACA,IAAIF,IAAI,CAACG,GAAL,CAASJ,GAAT,CAAJ,EAAmB,OAAOC,IAAI,CAACI,GAAL,CAASL,GAAT,CAAP;QACnB,IAAMM,MAAI,GAAeN,GAAW,CAACO,KAAZ,CAAkB,CAAlB,CAAzB;QACAN,IAAI,CAACO,GAAL,CAASR,GAAT,EAAcM,MAAd;QACAA,MAAI,CAACG,OAAL,CAAa,UAAUC,KAAV,EAAiBC,CAAjB,EAAkB;UAC7BL,MAAI,CAACK,CAAD,CAAJ,GAAUZ,eAAe,CAACW,KAAD,EAAQT,IAAR,CAAzB;QACD,CAFD;QAGA,OAAOK,MAAP;MACD;;IAED,KAAK,iBAAL;MAAwB;QACtBL,IAAI,GAAGA,IAAI,IAAI,IAAIE,GAAJ,EAAf;QACA,IAAIF,IAAI,CAACG,GAAL,CAASJ,GAAT,CAAJ,EAAmB,OAAOC,IAAI,CAACI,GAAL,CAASL,GAAT,CAAP;QAGnB,IAAMY,MAAI,GAAGlB,MAAM,CAACmB,MAAP,CAAcnB,MAAM,CAACoB,cAAP,CAAsBd,GAAtB,CAAd,CAAb;QACAC,IAAI,CAACO,GAAL,CAASR,GAAT,EAAcY,MAAd;QACAlB,MAAM,CAACqB,IAAP,CAAYf,GAAZ,EAAiBS,OAAjB,CAAyB,eAAG;UAC1BG,MAAI,CAACI,GAAD,CAAJ,GAAYjB,eAAe,CAAEC,GAAW,CAACgB,GAAD,CAAb,EAAoBf,IAApB,CAA3B;QACD,CAFD;QAGA,OAAOW,MAAP;MACD;;IAED;MACE,OAAOZ,GAAP;EA1BF;AA4BD","names":["Object","prototype","toString","cloneDeep","value","cloneDeepHelper","val","seen","call","Map","has","get","copy_1","slice","set","forEach","child","i","copy_2","create","getPrototypeOf","keys","key"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@apollo/src/utilities/common/cloneDeep.ts"],"sourcesContent":["const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper<T>(val: T, seen?: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}