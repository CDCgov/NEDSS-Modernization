{"ast":null,"code":"/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */","map":{"version":3,"names":["Kind"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/language/kinds.mjs"],"sourcesContent":["/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,IAAJ;;AAEA,CAAC,UAAUA,IAAV,EAAgB;EACfA,IAAI,CAAC,MAAD,CAAJ,GAAe,MAAf;EACAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,UAAnB;EACAA,IAAI,CAAC,sBAAD,CAAJ,GAA+B,qBAA/B;EACAA,IAAI,CAAC,qBAAD,CAAJ,GAA8B,oBAA9B;EACAA,IAAI,CAAC,eAAD,CAAJ,GAAwB,cAAxB;EACAA,IAAI,CAAC,OAAD,CAAJ,GAAgB,OAAhB;EACAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,UAAnB;EACAA,IAAI,CAAC,iBAAD,CAAJ,GAA0B,gBAA1B;EACAA,IAAI,CAAC,iBAAD,CAAJ,GAA0B,gBAA1B;EACAA,IAAI,CAAC,qBAAD,CAAJ,GAA8B,oBAA9B;EACAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,UAAnB;EACAA,IAAI,CAAC,KAAD,CAAJ,GAAc,UAAd;EACAA,IAAI,CAAC,OAAD,CAAJ,GAAgB,YAAhB;EACAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,aAAjB;EACAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,cAAlB;EACAA,IAAI,CAAC,MAAD,CAAJ,GAAe,WAAf;EACAA,IAAI,CAAC,MAAD,CAAJ,GAAe,WAAf;EACAA,IAAI,CAAC,MAAD,CAAJ,GAAe,WAAf;EACAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,aAAjB;EACAA,IAAI,CAAC,cAAD,CAAJ,GAAuB,aAAvB;EACAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,WAApB;EACAA,IAAI,CAAC,YAAD,CAAJ,GAAqB,WAArB;EACAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,UAApB;EACAA,IAAI,CAAC,eAAD,CAAJ,GAAwB,aAAxB;EACAA,IAAI,CAAC,mBAAD,CAAJ,GAA4B,kBAA5B;EACAA,IAAI,CAAC,2BAAD,CAAJ,GAAoC,yBAApC;EACAA,IAAI,CAAC,wBAAD,CAAJ,GAAiC,sBAAjC;EACAA,IAAI,CAAC,wBAAD,CAAJ,GAAiC,sBAAjC;EACAA,IAAI,CAAC,kBAAD,CAAJ,GAA2B,iBAA3B;EACAA,IAAI,CAAC,wBAAD,CAAJ,GAAiC,sBAAjC;EACAA,IAAI,CAAC,2BAAD,CAAJ,GAAoC,yBAApC;EACAA,IAAI,CAAC,uBAAD,CAAJ,GAAgC,qBAAhC;EACAA,IAAI,CAAC,sBAAD,CAAJ,GAA+B,oBAA/B;EACAA,IAAI,CAAC,uBAAD,CAAJ,GAAgC,qBAAhC;EACAA,IAAI,CAAC,8BAAD,CAAJ,GAAuC,2BAAvC;EACAA,IAAI,CAAC,sBAAD,CAAJ,GAA+B,qBAA/B;EACAA,IAAI,CAAC,kBAAD,CAAJ,GAA2B,iBAA3B;EACAA,IAAI,CAAC,uBAAD,CAAJ,GAAgC,qBAAhC;EACAA,IAAI,CAAC,uBAAD,CAAJ,GAAgC,qBAAhC;EACAA,IAAI,CAAC,0BAAD,CAAJ,GAAmC,wBAAnC;EACAA,IAAI,CAAC,sBAAD,CAAJ,GAA+B,oBAA/B;EACAA,IAAI,CAAC,qBAAD,CAAJ,GAA8B,mBAA9B;EACAA,IAAI,CAAC,6BAAD,CAAJ,GAAsC,0BAAtC;AACD,CA5CD,EA4CGA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CA5CP;;AA8CA,SAASA,IAAT;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}