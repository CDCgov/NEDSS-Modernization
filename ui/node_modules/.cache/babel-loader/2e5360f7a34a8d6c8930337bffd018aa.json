{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/providers/ApolloContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { useContext } from 'react';\nimport { Config } from '../config';\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApolloWrapper(props) {\n  _s();\n\n  const {\n    state\n  } = useContext(UserContext);\n  const httpLink = createHttpLink({\n    uri: `http://localhost:${Config.port}/graphql`\n  });\n  const authMiddleware = setContext((_, _ref) => {\n    let {\n      headers\n    } = _ref;\n    let header = {};\n    header = { ...headers,\n      authorization: `Bearer ${state.getToken()}`\n    };\n    return {\n      headers: header\n    };\n  });\n  const client = new ApolloClient({\n    link: authMiddleware.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApolloWrapper, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c = ApolloWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApolloWrapper\");","map":{"version":3,"names":["ApolloClient","ApolloProvider","createHttpLink","InMemoryCache","setContext","useContext","Config","UserContext","ApolloWrapper","props","state","httpLink","uri","port","authMiddleware","_","headers","header","authorization","getToken","client","link","concat","cache","children"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/providers/ApolloContext.tsx"],"sourcesContent":["import { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { useContext } from 'react';\nimport { Config } from '../config';\nimport { UserContext } from './UserContext';\n\nexport default function ApolloWrapper(props: any) {\n    const { state } = useContext(UserContext);\n\n    const httpLink = createHttpLink({\n        uri: `http://localhost:${Config.port}/graphql`\n    });\n    const authMiddleware = setContext((_, { headers }) => {\n        let header = {};\n        header = {\n            ...headers,\n            authorization: `Bearer ${state.getToken()}`\n        };\n        return {\n            headers: header\n        };\n    });\n    const client = new ApolloClient({\n        link: authMiddleware.concat(httpLink),\n        cache: new InMemoryCache()\n    });\n    return (\n        <div>\n            <ApolloProvider client={client}>{props.children}</ApolloProvider>\n        </div>\n    );\n}\n"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,cAAvC,EAAuDC,aAAvD,QAA4E,gBAA5E;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;EAAA;;EAC9C,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACE,WAAD,CAA5B;EAEA,MAAMI,QAAQ,GAAGT,cAAc,CAAC;IAC5BU,GAAG,EAAG,oBAAmBN,MAAM,CAACO,IAAK;EADT,CAAD,CAA/B;EAGA,MAAMC,cAAc,GAAGV,UAAU,CAAC,CAACW,CAAD,WAAoB;IAAA,IAAhB;MAAEC;IAAF,CAAgB;IAClD,IAAIC,MAAM,GAAG,EAAb;IACAA,MAAM,GAAG,EACL,GAAGD,OADE;MAELE,aAAa,EAAG,UAASR,KAAK,CAACS,QAAN,EAAiB;IAFrC,CAAT;IAIA,OAAO;MACHH,OAAO,EAAEC;IADN,CAAP;EAGH,CATgC,CAAjC;EAUA,MAAMG,MAAM,GAAG,IAAIpB,YAAJ,CAAiB;IAC5BqB,IAAI,EAAEP,cAAc,CAACQ,MAAf,CAAsBX,QAAtB,CADsB;IAE5BY,KAAK,EAAE,IAAIpB,aAAJ;EAFqB,CAAjB,CAAf;EAIA,oBACI;IAAA,uBACI,QAAC,cAAD;MAAgB,MAAM,EAAEiB,MAAxB;MAAA,UAAiCX,KAAK,CAACe;IAAvC;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAzBuBhB,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}