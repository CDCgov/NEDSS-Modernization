{"ast":null,"code":"var _jsxFileName = \"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/EventSearch/EventSerach.tsx\",\n    _s = $RefreshSig$();\n\nimport { Accordion, Button, Form, Grid } from '@trussworks/react-uswds';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { EventType, useFindPatientsByEventLazyQuery } from '../../generated/graphql/schema';\nimport { EventTypes } from './EventType';\nimport { GeneralSearch } from './generalSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventSearch = _ref => {\n  _s();\n\n  let {\n    onSearch\n  } = _ref;\n  // const [getFilteredData] = useFindPatientsByFilterLazyQuery();\n  const [getEventSearch] = useFindPatientsByEventLazyQuery();\n  const [eventSearchType, setEventSearchType] = useState('');\n  const methods = useForm();\n  const {\n    handleSubmit,\n    control,\n    reset\n  } = methods;\n  const eventSearchItems = [{\n    title: 'Event Type',\n    content: /*#__PURE__*/_jsxDEV(EventTypes, {\n      onChangeMethod: e => {\n        setEventSearchType(e);\n      },\n      control: control,\n      name: \"eventType\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this),\n    expanded: true,\n    id: '1',\n    headingLevel: 'h4',\n    className: 'accordian-item'\n  }];\n  const eventSearchFilteredItem = [{\n    title: 'General Search',\n    content: /*#__PURE__*/_jsxDEV(GeneralSearch, {\n      searchType: eventSearchType,\n      control: control\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this),\n    expanded: true,\n    id: '2',\n    headingLevel: 'h4',\n    className: 'accordian-item'\n  }];\n\n  const onSubmit = body => {\n    const filterData = {\n      eventType: eventSearchType\n    };\n\n    if (eventSearchType === EventType.Investigation) {\n      filterData.investigationFilter = {// TODO inject actual values\n        // conditions: ['Bacterial Vaginosis'],\n        // caseStatuses: {\n        //     includeUnassigned: true,\n        //     statusList: [\n        //         CaseStatus.Confirmed,\n        //         CaseStatus.NotACase,\n        //         CaseStatus.Probable,\n        //         CaseStatus.Suspect,\n        //         CaseStatus.Unknown\n        //     ]\n        // }\n      };\n    } else if (eventSearchType === EventType.LaboratoryReport) {\n      filterData.laboratoryReportFilter = {// TODO inject actual values\n        // resultedTest: 'Acid-Fast Stain'\n      };\n    } else {\n      // no search type selected\n      return;\n    } // getFilteredData({\n    //     variables: {\n    //         filter: rowData\n    //     }\n    // });\n    // const investigationFilter = {\n    //     conditions: ['Chancroid'],\n    //     programAreas: ['STD'],\n    //     jurisdictions: ['130006'], // Clayton County\n    //     pregnancyStatus: 'YES',\n    //     eventIdType: 'INVESTIGATION_ID',\n    //     eventId: 'CAS10001003GA01',\n    //     eventDateSearch: {\n    //         eventDateType: 'INVESTIGATION_CREATE_DATE',\n    //         from: '1970-01-01T00:00:00Z',\n    //         to: '2023-01-01T00:00:00Z'\n    //     },\n    //     createdBy: '10054490', // Id of user\n    //     lastUpdatedBy: '10054490', // Id of user\n    //     providerFacilitySearch: {\n    //         entityType: 'FACILITY',\n    //         id: '10003001'\n    //     }, // investigatorId: \"10003004\" - investigatorId is mutually exclusive with providerFacilitySearch\n    //     investigationStatus: 'CLOSED',\n    //     outbreakNames: ['WHS'],\n    //     caseStatuses: {\n    //         includeUnassigned: true,\n    //         statusList: ['UNKNOWN']\n    //     }\n    //     // notificationStatuses: {\n    //     // includeUnassigned:true\n    //     // statusList: [APPROVED]\n    //     // }\n    //     // processingStatuses: {\n    //     // includeUnassigned:true\n    //     // statusList: [AWAITING_INTERVIEW]\n    //     // }\n    // };\n\n\n    getEventSearch({\n      variables: {\n        filter: filterData,\n        page: {\n          pageNumber: 0,\n          pageSize: 50\n        }\n      }\n    }).then(re => {\n      onSearch(re.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"width-full maxw-full\",\n    children: [/*#__PURE__*/_jsxDEV(Accordion, {\n      items: eventSearchItems,\n      multiselectable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), eventSearchType && eventSearchType !== '- Select -' && /*#__PURE__*/_jsxDEV(Accordion, {\n      items: eventSearchFilteredItem,\n      multiselectable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      col: 12,\n      className: \"margin-top-5 padding-x-3\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"width-full\",\n        type: 'submit',\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      col: 12,\n      className: \"padding-x-3\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"width-full\",\n        type: 'button',\n        onClick: () => reset({\n          lastName: '',\n          firstName: '',\n          city: '',\n          state: '',\n          zip: '',\n          patientId: ''\n        }),\n        outline: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventSearch, \"14gnKHx+cQdHleS+pkPc1uA1HXg=\", false, function () {\n  return [useFindPatientsByEventLazyQuery, useForm];\n});\n\n_c = EventSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventSearch\");","map":{"version":3,"names":["Accordion","Button","Form","Grid","useState","useForm","EventType","useFindPatientsByEventLazyQuery","EventTypes","GeneralSearch","EventSearch","onSearch","getEventSearch","eventSearchType","setEventSearchType","methods","handleSubmit","control","reset","eventSearchItems","title","content","e","expanded","id","headingLevel","className","eventSearchFilteredItem","onSubmit","body","filterData","eventType","Investigation","investigationFilter","LaboratoryReport","laboratoryReportFilter","variables","filter","page","pageNumber","pageSize","then","re","data","lastName","firstName","city","state","zip","patientId"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/components/EventSearch/EventSerach.tsx"],"sourcesContent":["import { Accordion, Button, Form, Grid } from '@trussworks/react-uswds';\nimport { AccordionItemProps } from '@trussworks/react-uswds/lib/components/Accordion/Accordion';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { EventFilter, EventType, useFindPatientsByEventLazyQuery } from '../../generated/graphql/schema';\nimport { EventTypes } from './EventType';\nimport { GeneralSearch } from './generalSearch';\n\ntype EventSearchProps = {\n    onSearch: (data: any) => void;\n};\n\nexport const EventSearch = ({ onSearch }: EventSearchProps) => {\n    // const [getFilteredData] = useFindPatientsByFilterLazyQuery();\n    const [getEventSearch] = useFindPatientsByEventLazyQuery();\n\n    const [eventSearchType, setEventSearchType] = useState<any>('');\n\n    const methods = useForm();\n\n    const { handleSubmit, control, reset } = methods;\n\n    const eventSearchItems: AccordionItemProps[] = [\n        {\n            title: 'Event Type',\n            content: (\n                <EventTypes\n                    onChangeMethod={(e) => {\n                        setEventSearchType(e);\n                    }}\n                    control={control}\n                    name=\"eventType\"\n                />\n            ),\n            expanded: true,\n            id: '1',\n            headingLevel: 'h4',\n            className: 'accordian-item'\n        }\n    ];\n\n    const eventSearchFilteredItem: AccordionItemProps[] = [\n        {\n            title: 'General Search',\n            content: <GeneralSearch searchType={eventSearchType} control={control} />,\n            expanded: true,\n            id: '2',\n            headingLevel: 'h4',\n            className: 'accordian-item'\n        }\n    ];\n\n    const onSubmit: any = (body: any) => {\n        const filterData: EventFilter = {\n            eventType: eventSearchType\n        };\n        if (eventSearchType === EventType.Investigation) {\n            filterData.investigationFilter = {\n                // TODO inject actual values\n                // conditions: ['Bacterial Vaginosis'],\n                // caseStatuses: {\n                //     includeUnassigned: true,\n                //     statusList: [\n                //         CaseStatus.Confirmed,\n                //         CaseStatus.NotACase,\n                //         CaseStatus.Probable,\n                //         CaseStatus.Suspect,\n                //         CaseStatus.Unknown\n                //     ]\n                // }\n            };\n        } else if (eventSearchType === EventType.LaboratoryReport) {\n            filterData.laboratoryReportFilter = {\n                // TODO inject actual values\n                // resultedTest: 'Acid-Fast Stain'\n            };\n        } else {\n            // no search type selected\n            return;\n        }\n\n        // getFilteredData({\n        //     variables: {\n        //         filter: rowData\n        //     }\n        // });\n        // const investigationFilter = {\n        //     conditions: ['Chancroid'],\n        //     programAreas: ['STD'],\n        //     jurisdictions: ['130006'], // Clayton County\n        //     pregnancyStatus: 'YES',\n        //     eventIdType: 'INVESTIGATION_ID',\n        //     eventId: 'CAS10001003GA01',\n        //     eventDateSearch: {\n        //         eventDateType: 'INVESTIGATION_CREATE_DATE',\n        //         from: '1970-01-01T00:00:00Z',\n        //         to: '2023-01-01T00:00:00Z'\n        //     },\n        //     createdBy: '10054490', // Id of user\n        //     lastUpdatedBy: '10054490', // Id of user\n        //     providerFacilitySearch: {\n        //         entityType: 'FACILITY',\n        //         id: '10003001'\n        //     }, // investigatorId: \"10003004\" - investigatorId is mutually exclusive with providerFacilitySearch\n        //     investigationStatus: 'CLOSED',\n        //     outbreakNames: ['WHS'],\n        //     caseStatuses: {\n        //         includeUnassigned: true,\n        //         statusList: ['UNKNOWN']\n        //     }\n        //     // notificationStatuses: {\n        //     // includeUnassigned:true\n        //     // statusList: [APPROVED]\n        //     // }\n        //     // processingStatuses: {\n        //     // includeUnassigned:true\n        //     // statusList: [AWAITING_INTERVIEW]\n        //     // }\n        // };\n        getEventSearch({\n            variables: {\n                filter: filterData,\n                page: {\n                    pageNumber: 0,\n                    pageSize: 50\n                }\n            }\n        }).then((re) => {\n            onSearch(re.data);\n        });\n    };\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"width-full maxw-full\">\n            <Accordion items={eventSearchItems} multiselectable={true} />\n            {eventSearchType && eventSearchType !== '- Select -' && (\n                <Accordion items={eventSearchFilteredItem} multiselectable={true} />\n            )}\n            <Grid col={12} className=\"margin-top-5 padding-x-3\">\n                <Button className=\"width-full\" type={'submit'}>\n                    Search\n                </Button>\n            </Grid>\n            <Grid col={12} className=\"padding-x-3\">\n                <Button\n                    className=\"width-full\"\n                    type={'button'}\n                    onClick={() =>\n                        reset({\n                            lastName: '',\n                            firstName: '',\n                            city: '',\n                            state: '',\n                            zip: '',\n                            patientId: ''\n                        })\n                    }\n                    outline>\n                    Clear\n                </Button>\n            </Grid>\n        </Form>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}