{"ast":null,"code":"import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map(node => valueFromASTUntyped(node, variables));\n\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, field => field.name.value, field => valueFromASTUntyped(field.value, variables));\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  }\n}","map":{"version":3,"names":["keyValMap","Kind","valueFromASTUntyped","valueNode","variables","kind","NULL","INT","parseInt","value","FLOAT","parseFloat","STRING","ENUM","BOOLEAN","LIST","values","map","node","OBJECT","fields","field","name","VARIABLE"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/utilities/valueFromASTUntyped.mjs"],"sourcesContent":["import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,SAAxC,EAAmD;EACxD,QAAQD,SAAS,CAACE,IAAlB;IACE,KAAKJ,IAAI,CAACK,IAAV;MACE,OAAO,IAAP;;IAEF,KAAKL,IAAI,CAACM,GAAV;MACE,OAAOC,QAAQ,CAACL,SAAS,CAACM,KAAX,EAAkB,EAAlB,CAAf;;IAEF,KAAKR,IAAI,CAACS,KAAV;MACE,OAAOC,UAAU,CAACR,SAAS,CAACM,KAAX,CAAjB;;IAEF,KAAKR,IAAI,CAACW,MAAV;IACA,KAAKX,IAAI,CAACY,IAAV;IACA,KAAKZ,IAAI,CAACa,OAAV;MACE,OAAOX,SAAS,CAACM,KAAjB;;IAEF,KAAKR,IAAI,CAACc,IAAV;MACE,OAAOZ,SAAS,CAACa,MAAV,CAAiBC,GAAjB,CAAsBC,IAAD,IAC1BhB,mBAAmB,CAACgB,IAAD,EAAOd,SAAP,CADd,CAAP;;IAIF,KAAKH,IAAI,CAACkB,MAAV;MACE,OAAOnB,SAAS,CACdG,SAAS,CAACiB,MADI,EAEbC,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWb,KAFR,EAGbY,KAAD,IAAWnB,mBAAmB,CAACmB,KAAK,CAACZ,KAAP,EAAcL,SAAd,CAHhB,CAAhB;;IAMF,KAAKH,IAAI,CAACsB,QAAV;MACE,OAAOnB,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GACH,KAAK,CADF,GAEHA,SAAS,CAACD,SAAS,CAACmB,IAAV,CAAeb,KAAhB,CAFb;EA5BJ;AAgCD"},"metadata":{},"sourceType":"module"}