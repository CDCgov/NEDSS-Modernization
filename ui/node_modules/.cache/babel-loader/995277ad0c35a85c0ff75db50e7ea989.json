{"ast":null,"code":"import _regeneratorRuntime from\"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Accordion,Button,ButtonGroup,DatePicker,Fieldset,Form,Label}from'@trussworks/react-uswds';import'./AddPatient.scss';import NameFields from'./components/nameFields/NameFields';import AddressFields from'./components/addressFields/AddressFields';import PersonalDetails from'./components/personalDetails/PersonalDetails';import ContactFields from'./components/contactFields/ContactFields';import EthnicityFields from'./components/ethnicityFields/EthnicityFields';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function AddPatient(){var _useState=useState({firstName:'',middleName:'',lastName:'',suffix:''}),_useState2=_slicedToArray(_useState,2),nameFields=_useState2[0],setNameFields=_useState2[1];var _useState3=useState({streetAddress1:'',streetAddress2:'',city:'',state:'',zip:'',county:'',censusTract:'',country:''}),_useState4=_slicedToArray(_useState3,2),addressFields=_useState4[0],setAddressFields=_useState4[1];var _useState5=useState({dateOfBirth:'',sex:'',birthSex:'',isPatientDeceased:'',stateHivCaseId:'',maritalStatus:''}),_useState6=_slicedToArray(_useState5,2),personalDetailsFields=_useState6[0],setPersonalDetailsFields=_useState6[1];var _useState7=useState({homePhone:'',workPhone:'',workPhoneExt:'',cellPhone:'',email:''}),_useState8=_slicedToArray(_useState7,2),contactFields=_useState8[0],setContactFields=_useState8[1];var _useState9=useState({ethnicity:''}),_useState10=_slicedToArray(_useState9,2),ethnicityFields=_useState10[0],setEthnicityFields=_useState10[1];var _useState11=useState(new Date().toISOString()),_useState12=_slicedToArray(_useState11,2),asOfDate=_useState12[0],setAsOfDate=_useState12[1];function submit(){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return _submit.apply(this,arguments);}function cancel(){console.log('Cancel clicked');}function getSections(){var items=[];items.push({title:'Name',content:/*#__PURE__*/_jsx(NameFields,{nameFields:nameFields,updateCallback:setNameFields}),expanded:true,id:'name-section',headingLevel:'h1'});items.push({title:'Address',content:/*#__PURE__*/_jsx(AddressFields,{addressFields:addressFields,updateCallback:setAddressFields}),expanded:false,id:'address-section',headingLevel:'h1'});items.push({title:'Other Personal Details',content:/*#__PURE__*/_jsx(PersonalDetails,{personalDetailsFields:personalDetailsFields,updateCallback:setPersonalDetailsFields}),expanded:false,id:'personal-details',headingLevel:'h1'});items.push({title:'Contact Information',content:/*#__PURE__*/_jsx(ContactFields,{contactFields:contactFields,updateCallback:setContactFields}),expanded:false,id:'contact',headingLevel:'h1'});items.push({title:'Ethnicity and Race Information',content:/*#__PURE__*/_jsx(EthnicityFields,{ethnicityFields:ethnicityFields,updateCallback:setEthnicityFields}),expanded:false,id:'ethnicity',headingLevel:'h1'});return items;}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:submit,large:true,children:[/*#__PURE__*/_jsxs(Fieldset,{legend:\"Add Patient\",legendStyle:\"large\",children:[/*#__PURE__*/_jsx(Accordion,{multiselectable:true,items:getSections()}),/*#__PURE__*/_jsx(Label,{htmlFor:\"as-of-date\",children:\"As of Date\"}),/*#__PURE__*/_jsx(DatePicker,{id:\"asOf\",name:\"asOf\",defaultValue:asOfDate,onChange:function onChange(e){return setAsOfDate(e||'');}})]}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:cancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:submit,children:\"Submit\"})]})]})})})});}","map":{"version":3,"names":["Accordion","Button","ButtonGroup","DatePicker","Fieldset","Form","Label","NameFields","AddressFields","PersonalDetails","ContactFields","EthnicityFields","useState","AddPatient","firstName","middleName","lastName","suffix","nameFields","setNameFields","streetAddress1","streetAddress2","city","state","zip","county","censusTract","country","addressFields","setAddressFields","dateOfBirth","sex","birthSex","isPatientDeceased","stateHivCaseId","maritalStatus","personalDetailsFields","setPersonalDetailsFields","homePhone","workPhone","workPhoneExt","cellPhone","email","contactFields","setContactFields","ethnicity","ethnicityFields","setEthnicityFields","Date","toISOString","asOfDate","setAsOfDate","submit","cancel","console","log","getSections","items","push","title","content","expanded","id","headingLevel","e"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/src/pages/addPatient/AddPatient.tsx"],"sourcesContent":["import { Accordion, Button, ButtonGroup, DatePicker, Fieldset, Form, Label } from '@trussworks/react-uswds';\nimport './AddPatient.scss';\nimport NameFields, { InputNameFields } from './components/nameFields/NameFields';\nimport AddressFields, { InputAddressFields } from './components/addressFields/AddressFields';\nimport { AccordionItemProps } from '@trussworks/react-uswds/lib/components/Accordion/Accordion';\nimport PersonalDetails, { InputPersonalDetailsFields } from './components/personalDetails/PersonalDetails';\nimport ContactFields, { InputContactFields } from './components/contactFields/ContactFields';\nimport EthnicityFields, { InputEthnicityFields } from './components/ethnicityFields/EthnicityFields';\nimport { useState } from 'react';\n\nexport default function AddPatient() {\n    const [nameFields, setNameFields]: [InputNameFields, (inputNameFields: InputNameFields) => void] = useState({\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        suffix: ''\n    });\n    const [addressFields, setAddressFields]: [InputAddressFields, (inputNameFields: InputAddressFields) => void] =\n        useState({\n            streetAddress1: '',\n            streetAddress2: '',\n            city: '',\n            state: '',\n            zip: '',\n            county: '',\n            censusTract: '',\n            country: ''\n        });\n\n    const [personalDetailsFields, setPersonalDetailsFields]: [\n        InputPersonalDetailsFields,\n        (inputNameFields: InputPersonalDetailsFields) => void\n    ] = useState({\n        dateOfBirth: '',\n        sex: '',\n        birthSex: '',\n        isPatientDeceased: '',\n        stateHivCaseId: '',\n        maritalStatus: ''\n    });\n\n    const [contactFields, setContactFields]: [InputContactFields, (inputContactFields: InputContactFields) => void] =\n        useState({ homePhone: '', workPhone: '', workPhoneExt: '', cellPhone: '', email: '' });\n\n    const [ethnicityFields, setEthnicityFields]: [\n        InputEthnicityFields,\n        (ethnicityFields: InputEthnicityFields) => void\n    ] = useState({\n        ethnicity: ''\n    });\n\n    const [asOfDate, setAsOfDate]: [string, (asOfDate: string) => void] = useState(new Date().toISOString());\n\n    async function submit(): Promise<void> {\n        // TODO migrate to use a GraphQL mutation- NYI\n        // const person = {\n        //     // Name\n        //     firstNm: nameFields.firstName,\n        //     middleNm: nameFields.middleName,\n        //     lastNm: nameFields.lastName,\n        //     nmSuffix: nameFields.suffix,\n        //     // Address\n        //     hmStreetAddr1: addressFields.streetAddress1,\n        //     hmStreetAddr2: addressFields.streetAddress2,\n        //     hmCityCd: addressFields.city,\n        //     hmStateCd: addressFields.state,\n        //     hmZipCd: addressFields.zip,\n        //     hmCntyCd: addressFields.county,\n        //     // TODO census tract?\n        //     hmCntryCd: addressFields.country,\n        //     // Personal Details\n        //     birthTime: personalDetailsFields.dateOfBirth.trim() == '' ? undefined : personalDetailsFields.dateOfBirth,\n        //     currSexCd: personalDetailsFields.sex,\n        //     birthGenderCd: personalDetailsFields.birthSex,\n        //     deceasedIndCd: personalDetailsFields.isPatientDeceased,\n        //     // TODO HIV case id?\n        //     maritalStatusCd: personalDetailsFields.maritalStatus,\n        //     // Contact\n        //     hmPhoneNbr: contactFields.homePhone,\n        //     wkPhoneNbr: contactFields.workPhone + 'x' + contactFields.workPhoneExt, // TODO how to store workPhoneExt\n        //     cellPhoneNbr: contactFields.cellPhone,\n        //     hmEmailAddr: contactFields.email,\n        //     // Ethnicity\n        //     ethnicityGroupCd: ethnicityFields.ethnicity, // TODO how is ethnicity stored\n        //     // As of\n        //     asOfDateAdmin: asOfDate,\n        //     asOfDateEthnicity: asOfDate,\n        //     asOfDateGeneral: asOfDate,\n        //     asOfDateMorbidity: asOfDate,\n        //     asOfDateSex: asOfDate\n        // };\n        // const newId = await PersonControllerService.createPersonUsingPost({ person });\n    }\n\n    function cancel(): void {\n        console.log('Cancel clicked');\n    }\n\n    function getSections(): AccordionItemProps[] {\n        const items: AccordionItemProps[] = [];\n        items.push({\n            title: 'Name',\n            content: <NameFields nameFields={nameFields} updateCallback={setNameFields} />,\n            expanded: true,\n            id: 'name-section',\n            headingLevel: 'h1'\n        });\n        items.push({\n            title: 'Address',\n            content: <AddressFields addressFields={addressFields} updateCallback={setAddressFields} />,\n            expanded: false,\n            id: 'address-section',\n            headingLevel: 'h1'\n        });\n        items.push({\n            title: 'Other Personal Details',\n            content: (\n                <PersonalDetails\n                    personalDetailsFields={personalDetailsFields}\n                    updateCallback={setPersonalDetailsFields}\n                />\n            ),\n            expanded: false,\n            id: 'personal-details',\n            headingLevel: 'h1'\n        });\n        items.push({\n            title: 'Contact Information',\n            content: <ContactFields contactFields={contactFields} updateCallback={setContactFields} />,\n            expanded: false,\n            id: 'contact',\n            headingLevel: 'h1'\n        });\n        items.push({\n            title: 'Ethnicity and Race Information',\n            content: <EthnicityFields ethnicityFields={ethnicityFields} updateCallback={setEthnicityFields} />,\n            expanded: false,\n            id: 'ethnicity',\n            headingLevel: 'h1'\n        });\n        return items;\n    }\n\n    return (\n        <>\n            <div className=\"content\">\n                <div className=\"form-container\">\n                    <Form onSubmit={submit} large>\n                        <Fieldset legend=\"Add Patient\" legendStyle=\"large\">\n                            <Accordion multiselectable={true} items={getSections()} />\n                            <Label htmlFor=\"as-of-date\">As of Date</Label>\n                            <DatePicker\n                                id=\"asOf\"\n                                name=\"asOf\"\n                                defaultValue={asOfDate}\n                                onChange={(e) => setAsOfDate(e || '')}\n                            />\n                        </Fieldset>\n                        <ButtonGroup>\n                            <Button type=\"button\" onClick={cancel}>\n                                Cancel\n                            </Button>\n                            <Button type=\"button\" onClick={submit}>\n                                Submit\n                            </Button>\n                        </ButtonGroup>\n                    </Form>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}