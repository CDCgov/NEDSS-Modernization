{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\n\nexport function UniqueFragmentNamesRule(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(\"There can be only one fragment named \\\"\".concat(fragmentName, \"\\\".\"), {\n          nodes: [knownFragmentNames[fragmentName], node.name]\n        }));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueFragmentNamesRule","context","knownFragmentNames","Object","create","OperationDefinition","FragmentDefinition","node","fragmentName","name","value","reportError","nodes"],"sources":["/Users/henryclark/Desktop/Enquizit/Project/NEDSS-Modernization-1/ui/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;EAC/C,IAAMC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA3B;EACA,OAAO;IACLC,mBAAmB,EAAE;MAAA,OAAM,KAAN;IAAA,CADhB;IAGLC,kBAHK,8BAGcC,IAHd,EAGoB;MACvB,IAAMC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA/B;;MAEA,IAAIR,kBAAkB,CAACM,YAAD,CAAtB,EAAsC;QACpCP,OAAO,CAACU,WAAR,CACE,IAAIZ,YAAJ,kDAC2CS,YAD3C,UAEE;UACEI,KAAK,EAAE,CAACV,kBAAkB,CAACM,YAAD,CAAnB,EAAmCD,IAAI,CAACE,IAAxC;QADT,CAFF,CADF;MAQD,CATD,MASO;QACLP,kBAAkB,CAACM,YAAD,CAAlB,GAAmCD,IAAI,CAACE,IAAxC;MACD;;MAED,OAAO,KAAP;IACD;EApBI,CAAP;AAsBD"},"metadata":{},"sourceType":"module"}